<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>初等記憶體</title><link>https://axionl.me/</link><description>Recent content on 初等記憶體</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 20 Jul 2021 10:58:40 +0800</lastBuildDate><atom:link href="https://axionl.me/index.xml" rel="self" type="application/rss+xml"/><item><title>[OhMyQt 系列] 01_HelloWorld</title><link>https://axionl.me/p/ohmyqt-%E7%B3%BB%E5%88%97-01_helloworld/</link><pubDate>Tue, 20 Jul 2021 10:58:40 +0800</pubDate><guid>https://axionl.me/p/ohmyqt-%E7%B3%BB%E5%88%97-01_helloworld/</guid><description>&lt;img src="https://axionl.me/p/ohmyqt-%E7%B3%BB%E5%88%97-01_helloworld/preview2.png" alt="Featured image of post [OhMyQt 系列] 01_HelloWorld" />&lt;h2 id="前言">前言&lt;/h2>
&lt;blockquote>
&lt;p>项目地址: &lt;a class="link" href="https://github.com/axionl/OhMyQt" target="_blank" rel="noopener"
>axionl/OhMyQt&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>项目在 Windows 11 和 ArchLinux 下进行测试&lt;/li>
&lt;li>Qt 版本: 5.15.2&lt;/li>
&lt;/ul>
&lt;p>本文以项目构建的角度介绍一个简单 Qt 应用的开发，其余具体的环境安装和配置稍后会在第 0 节内容中放出。&lt;/p>
&lt;h2 id="从看见到设计">从看见到设计&lt;/h2>
&lt;p>我们需要一个简单的展示页面作为上手的第一个项目：&lt;/p>
&lt;ul>
&lt;li>一个醒目的标题&lt;/li>
&lt;li>一段用于描述的文字&lt;/li>
&lt;li>还有一个好看的背景&lt;/li>
&lt;/ul>
&lt;p>假设我们已经做了出来，它长下面这个样子，你需要做的是把它保留在你的想象中，我们再回过头来考虑如何实现。&lt;/p>
&lt;p>&lt;figure style="flex-grow: 177; flex-basis: 426px">
&lt;a href="https://axionl.me/p/ohmyqt-%E7%B3%BB%E5%88%97-01_helloworld/preview.png" data-size="1920x1080">&lt;img src="https://axionl.me/p/ohmyqt-%E7%B3%BB%E5%88%97-01_helloworld/preview.png"
srcset="https://axionl.me/p/ohmyqt-%E7%B3%BB%E5%88%97-01_helloworld/preview_hu85caa472e9bc90ba71d5339c7711fdd3_1488388_480x0_resize_box_2.png 480w, https://axionl.me/p/ohmyqt-%E7%B3%BB%E5%88%97-01_helloworld/preview_hu85caa472e9bc90ba71d5339c7711fdd3_1488388_1024x0_resize_box_2.png 1024w"
width="1920"
height="1080"
loading="lazy"
alt="preview">
&lt;/a>
&lt;figcaption>preview&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h3 id="布局">布局&lt;/h3>
&lt;p>我们把窗口想象成一个盒子（而不是一个平面或者一张桌子，因为盒子横看有四壁，俯瞰有纵深），而所需要填入的内容当成另一个小些的盒子，套入到窗口这个大盒子中。结合我们多年糊 PPT 的水平，可以对界面有如下设计要求：&lt;/p>
&lt;ul>
&lt;li>内容整体居中&lt;/li>
&lt;li>标题和描述上下排布&lt;/li>
&lt;li>内容之间最好有一定的间距&lt;/li>
&lt;/ul>
&lt;p>&lt;figure style="flex-grow: 132; flex-basis: 319px">
&lt;a href="https://axionl.me/p/ohmyqt-%E7%B3%BB%E5%88%97-01_helloworld/layout.png" data-size="730x549">&lt;img src="https://axionl.me/p/ohmyqt-%E7%B3%BB%E5%88%97-01_helloworld/layout.png"
srcset="https://axionl.me/p/ohmyqt-%E7%B3%BB%E5%88%97-01_helloworld/layout_hua50c8d7697c036278e5e2f296d277e31_33333_480x0_resize_box_2.png 480w, https://axionl.me/p/ohmyqt-%E7%B3%BB%E5%88%97-01_helloworld/layout_hua50c8d7697c036278e5e2f296d277e31_33333_1024x0_resize_box_2.png 1024w"
width="730"
height="549"
loading="lazy"
alt="layout">
&lt;/a>
&lt;figcaption>layout&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>如上图所示，我们把这一些要求的集合称为 “布局” 也即 Layout，它决定了我们软件设计的基本框架。上面的每一项具体内容称为 “元素” 即 Element / Item。有的人设计 PPT 的时候会说：“应甲方要求，标题一定要大！”，那这属于元素的“属性”，即 Property。于是我们来抽象实现一下这个布局（&lt;strong>注意不是直接能用的代码&lt;/strong>）：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-qml" data-lang="qml">&lt;span class="c1">// 基本元素如下
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">Window&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="c1">// 窗口一个大盒子
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">Box&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="c1">// 里面套个小盒子
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">Title&lt;/span> &lt;span class="p">{}&lt;/span> &lt;span class="c1">// 盒子里面有标题
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">Description&lt;/span> &lt;span class="p">{}&lt;/span> &lt;span class="c1">// 标题下面有描述
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>进一步加上居中对齐和间距：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-qml" data-lang="qml">&lt;span class="nx">Window&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">Box&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">anchors.centerIn:&lt;/span> &lt;span class="nx">parent&lt;/span> &lt;span class="c1">// 居中对齐大盒子
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="nx">Title&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">anchors.horizontalCenter:&lt;/span> &lt;span class="nx">parent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">horizontalCenter&lt;/span> &lt;span class="c1">// 水平对齐小盒子
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="nx">Description&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">anchors.horizontalCenter:&lt;/span> &lt;span class="nx">parent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">horizontalCenter&lt;/span> &lt;span class="c1">// 水平对齐小盒子
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以看到，这里引用了一个 &lt;code>parent&lt;/code> 的概念，实际上指代上一层父级元素，套娃套在里面的才是娃，文字和描述的父级元素是小盒子，小盒子的父级元素是大窗口。再补上元素的属性和间距：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-qml" data-lang="qml">&lt;span class="nx">Window&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">width:&lt;/span> &lt;span class="mi">960&lt;/span> &lt;span class="c1">// 窗口宽度
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">height:&lt;/span> &lt;span class="mi">720&lt;/span> &lt;span class="c1">// 窗口高度
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="nx">Box&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">anchors.centerIn:&lt;/span> &lt;span class="nx">parent&lt;/span>
&lt;span class="k">implicitWidth:&lt;/span> &lt;span class="mi">360&lt;/span> &lt;span class="c1">// 宽度 360 单位（多数情况下理解为像素）
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">implicitHeight:&lt;/span> &lt;span class="mi">128&lt;/span> &lt;span class="c1">// 高度 128 单位
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="nx">Title&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">anchors.horizontalCenter:&lt;/span> &lt;span class="nx">parent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">horizontalCenter&lt;/span> &lt;span class="c1">// 水平对齐小盒子
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">font.pixelSize:&lt;/span> &lt;span class="mi">24&lt;/span> &lt;span class="c1">// 标题一定要大
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="nx">Box&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">visible:&lt;/span> &lt;span class="kc">false&lt;/span> &lt;span class="c1">// 一个看不见的盒子
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">implicitHeight:&lt;/span> &lt;span class="mi">16&lt;/span> &lt;span class="c1">// 用于拉开标题和描述的间距
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="nx">Description&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">anchors.horizontalCenter:&lt;/span> &lt;span class="nx">parent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">horizontalCenter&lt;/span> &lt;span class="c1">// 水平对齐小盒子
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">font.pixelSize:&lt;/span> &lt;span class="mi">16&lt;/span> &lt;span class="c1">// 精致的描述用小字
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>这些具体元素我们以后会写到如何实现，现在需要用 &lt;code>QtQuick.Controls&lt;/code> 提供的一些默认元素替代：&lt;/p>
&lt;ul>
&lt;li>Box-&amp;gt;Rectangle&lt;/li>
&lt;li>Title / Description -&amp;gt; Text&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-qml" data-lang="qml">&lt;span class="kr">import&lt;/span> &lt;span class="nx">QtQuick&lt;/span> &lt;span class="mf">2.12&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">QtQuick&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Window&lt;/span> &lt;span class="mf">2.12&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">QtQuick&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Controls&lt;/span> &lt;span class="mf">2.12&lt;/span>
&lt;span class="nx">Window&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">width:&lt;/span> &lt;span class="mi">960&lt;/span>
&lt;span class="k">height:&lt;/span> &lt;span class="mi">720&lt;/span>
&lt;span class="nx">Rectangle&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">anchors.centerIn:&lt;/span> &lt;span class="nx">parent&lt;/span>
&lt;span class="k">implicitWidth:&lt;/span> &lt;span class="mi">360&lt;/span>
&lt;span class="k">implicitHeight:&lt;/span> &lt;span class="mi">128&lt;/span>
&lt;span class="k">color:&lt;/span> &lt;span class="s2">&amp;#34;#ef7e9ceb&amp;#34;&lt;/span>
&lt;span class="nx">Text&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">id: title&lt;/span>
&lt;span class="k">anchors.horizontalCenter:&lt;/span> &lt;span class="nx">parent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">horizontalCenter&lt;/span>
&lt;span class="k">text:&lt;/span> &lt;span class="s2">&amp;#34;这是一个大标题&amp;#34;&lt;/span>
&lt;span class="k">font.pixelSize:&lt;/span> &lt;span class="mi">48&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">Rectangle&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">color:&lt;/span> &lt;span class="s2">&amp;#34;transparent&amp;#34;&lt;/span>
&lt;span class="k">implicitHeight:&lt;/span> &lt;span class="mi">16&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">Text&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">id: description&lt;/span>
&lt;span class="k">anchors.horizontalCenter:&lt;/span> &lt;span class="nx">parent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">horizontalCenter&lt;/span>
&lt;span class="k">text:&lt;/span> &lt;span class="s2">&amp;#34;我吞下玻璃会伤身体&amp;#34;&lt;/span>
&lt;span class="k">font.pixelSize:&lt;/span> &lt;span class="mi">24&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>实现之后的效果可能长成了这个样子，对了，但没全对。因为我们这个 &lt;code>Rectangle&lt;/code> 不太智能，是个“硬盒”，元素之间会挤在一起，而不是自动拉开保持社交距离。&lt;/p>
&lt;p>&lt;figure style="flex-grow: 203; flex-basis: 487px">
&lt;a href="https://axionl.me/p/ohmyqt-%E7%B3%BB%E5%88%97-01_helloworld/awesome_qml.png" data-size="506x249">&lt;img src="https://axionl.me/p/ohmyqt-%E7%B3%BB%E5%88%97-01_helloworld/awesome_qml.png"
srcset="https://axionl.me/p/ohmyqt-%E7%B3%BB%E5%88%97-01_helloworld/awesome_qml_hu9bc5d2d9adaff629e5840cb94ad029ac_12553_480x0_resize_box_2.png 480w, https://axionl.me/p/ohmyqt-%E7%B3%BB%E5%88%97-01_helloworld/awesome_qml_hu9bc5d2d9adaff629e5840cb94ad029ac_12553_1024x0_resize_box_2.png 1024w"
width="506"
height="249"
loading="lazy"
alt="awesome_qml">
&lt;/a>
&lt;figcaption>awesome_qml&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-qml" data-lang="qml">&lt;span class="kr">import&lt;/span> &lt;span class="nx">QtQuick&lt;/span> &lt;span class="mf">2.12&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">QtQuick&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Window&lt;/span> &lt;span class="mf">2.12&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">QtQuick&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Controls&lt;/span> &lt;span class="mf">2.12&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">QtQuick&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Layouts&lt;/span> &lt;span class="mf">1.12&lt;/span>
&lt;span class="nx">Window&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">width:&lt;/span> &lt;span class="mi">960&lt;/span>
&lt;span class="k">height:&lt;/span> &lt;span class="mi">720&lt;/span>
&lt;span class="nx">Rectangle&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">anchors.centerIn:&lt;/span> &lt;span class="nx">parent&lt;/span>
&lt;span class="k">implicitWidth:&lt;/span> &lt;span class="mi">360&lt;/span>
&lt;span class="k">implicitHeight:&lt;/span> &lt;span class="mi">128&lt;/span>
&lt;span class="k">color:&lt;/span> &lt;span class="s2">&amp;#34;#ef7e9ceb&amp;#34;&lt;/span>
&lt;span class="nx">ColumnLayout&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="c1">// 一个上下布局的模板
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">anchors.fill:&lt;/span> &lt;span class="nx">parent&lt;/span> &lt;span class="c1">// 沾满小盒子的空间
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">spacing:&lt;/span> &lt;span class="mi">16&lt;/span> &lt;span class="c1">// 原先看不见的盒子用默认提供的间距属性实现
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="nx">Text&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">id: title&lt;/span>
&lt;span class="k">anchors.horizontalCenter:&lt;/span> &lt;span class="nx">parent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">horizontalCenter&lt;/span>
&lt;span class="k">text:&lt;/span> &lt;span class="s2">&amp;#34;这是一个大标题&amp;#34;&lt;/span>
&lt;span class="k">font.pixelSize:&lt;/span> &lt;span class="mi">48&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">Text&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">id: description&lt;/span>
&lt;span class="k">anchors.horizontalCenter:&lt;/span> &lt;span class="nx">parent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">horizontalCenter&lt;/span>
&lt;span class="k">text:&lt;/span> &lt;span class="s2">&amp;#34;我吞下玻璃会伤身体&amp;#34;&lt;/span>
&lt;span class="k">font.pixelSize:&lt;/span> &lt;span class="mi">24&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以把 &lt;code>ColumnLayout&lt;/code> 当作一个更加智能的盒子，它能够把挤在一起的元素上下依次排开。而与之相对的 &lt;code>RowLayout&lt;/code> 则是将元素左右排开。&lt;/p>
&lt;p>&lt;figure style="flex-grow: 166; flex-basis: 400px">
&lt;a href="https://axionl.me/p/ohmyqt-%E7%B3%BB%E5%88%97-01_helloworld/column_layout.png" data-size="490x294">&lt;img src="https://axionl.me/p/ohmyqt-%E7%B3%BB%E5%88%97-01_helloworld/column_layout.png"
srcset="https://axionl.me/p/ohmyqt-%E7%B3%BB%E5%88%97-01_helloworld/column_layout_hu4ea178bc7978c0e5fcfe35c6378179d7_12025_480x0_resize_box_2.png 480w, https://axionl.me/p/ohmyqt-%E7%B3%BB%E5%88%97-01_helloworld/column_layout_hu4ea178bc7978c0e5fcfe35c6378179d7_12025_1024x0_resize_box_2.png 1024w"
width="490"
height="294"
loading="lazy"
alt="column_layout">
&lt;/a>
&lt;figcaption>column_layout&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>对比原本想像中的布局要求，可以说是基本实现了(&lt;del>打个九折不过分吧&lt;/del>)。&lt;/p>
&lt;h3 id="样式">样式&lt;/h3>
&lt;p>基本的元素提供了默认的样式和属性，回顾想象图目前还缺少：&lt;/p>
&lt;ul>
&lt;li>按钮&lt;/li>
&lt;li>背景图&lt;/li>
&lt;/ul>
&lt;p>以一个基本的矩形为例，有如下常用属性（&lt;a class="link" href="https://doc.qt.io/qt-5/qml-qtquick-rectangle.html" target="_blank" rel="noopener"
>QtQuick-Rectangle&lt;/a>）&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-qml" data-lang="qml">&lt;span class="kr">import&lt;/span> &lt;span class="nx">QtQuick&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Controls&lt;/span> &lt;span class="mf">2.12&lt;/span>
&lt;span class="nx">Rectangle&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">width:&lt;/span> &lt;span class="mi">16&lt;/span>
&lt;span class="k">height:&lt;/span> &lt;span class="mi">16&lt;/span>
&lt;span class="k">radius:&lt;/span> &lt;span class="mi">8&lt;/span> &lt;span class="c1">// 圆角半径
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">color:&lt;/span> &lt;span class="s2">&amp;#34;white&amp;#34;&lt;/span> &lt;span class="c1">// 颜色
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">border.width:&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="c1">// 边框宽度
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">border.color:&lt;/span> &lt;span class="s2">&amp;#34;whitesmoke&amp;#34;&lt;/span> &lt;span class="c1">// 边框颜色
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>带阴影的矩形可以这样实现：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-qml" data-lang="qml">&lt;span class="kr">import&lt;/span> &lt;span class="nx">QtQuick&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Controls&lt;/span> &lt;span class="mf">2.12&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">QtGraphicalEffects&lt;/span> &lt;span class="mf">1.0&lt;/span> &lt;span class="c1">// 包含 DropShadow 效果
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="nx">Rectangle&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="k">layer.enabled:&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;span class="k">layer.effect:&lt;/span> &lt;span class="nx">DropShadow&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">horizontalOffset:&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="c1">// 横向偏移
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">verticalOffset:&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="c1">// 纵向偏移
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">radius:&lt;/span> &lt;span class="mi">16&lt;/span> &lt;span class="c1">// 阴影半径
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">samples:&lt;/span> &lt;span class="mi">17&lt;/span> &lt;span class="c1">// 采样率（越高效果越好，性能消耗也增大）
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">color:&lt;/span> &lt;span class="s2">&amp;#34;#10000000&amp;#34;&lt;/span> &lt;span class="c1">// ARGB（透明度，红，绿，蓝）
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>为矩形添加渐变色：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-qml" data-lang="qml">&lt;span class="nx">Rectangle&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="k">rotation:&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="c1">// 渐变角度
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">gradient:&lt;/span> &lt;span class="nx">Gradient&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">GradientStop&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">position:&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="k">color:&lt;/span> &lt;span class="s2">&amp;#34;#ef7e9ceb&amp;#34;&lt;/span> &lt;span class="c1">// 起始颜色
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="c1">// 可以添加多段
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="nx">GradientStop&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">position:&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">color:&lt;/span> &lt;span class="s2">&amp;#34;#c5000000&amp;#34;&lt;/span> &lt;span class="c1">// 结束颜色
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>qml.qrc&lt;/code> 文件中管理所有的静态资源，可以右键在编辑器中打开，然后添加图片资源：&lt;/p>
&lt;p>&lt;figure style="flex-grow: 198; flex-basis: 476px">
&lt;a href="https://axionl.me/p/ohmyqt-%E7%B3%BB%E5%88%97-01_helloworld/qml_qrc.png" data-size="729x367">&lt;img src="https://axionl.me/p/ohmyqt-%E7%B3%BB%E5%88%97-01_helloworld/qml_qrc.png"
srcset="https://axionl.me/p/ohmyqt-%E7%B3%BB%E5%88%97-01_helloworld/qml_qrc_hue4d97a6005f65bf1e466ac417d253cc9_33146_480x0_resize_box_2.png 480w, https://axionl.me/p/ohmyqt-%E7%B3%BB%E5%88%97-01_helloworld/qml_qrc_hue4d97a6005f65bf1e466ac417d253cc9_33146_1024x0_resize_box_2.png 1024w"
width="729"
height="367"
loading="lazy"
alt="qml.qrc">
&lt;/a>
&lt;figcaption>qml.qrc&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-qml" data-lang="qml">&lt;span class="nx">Rectangle&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">id: background&lt;/span>
&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="nx">Image&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">anchors.fill:&lt;/span> &lt;span class="nx">background&lt;/span> &lt;span class="c1">// 填充背景矩形
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">source:&lt;/span> &lt;span class="s2">&amp;#34;qrc:/background.png&amp;#34;&lt;/span> &lt;span class="c1">// 图片资源
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">fillMode:&lt;/span> &lt;span class="nx">Image&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">PreserveAspectCrop&lt;/span> &lt;span class="c1">// 填充方式
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">z:&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="c1">// 由于需要将渐变色作为滤镜效果，所以图片的层级下调
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果去掉 z 轴高度设置会发现渐变色在图片下层不可见：&lt;/p>
&lt;p>&lt;figure style="flex-grow: 120; flex-basis: 289px">
&lt;a href="https://axionl.me/p/ohmyqt-%E7%B3%BB%E5%88%97-01_helloworld/no_z_index.png" data-size="770x639">&lt;img src="https://axionl.me/p/ohmyqt-%E7%B3%BB%E5%88%97-01_helloworld/no_z_index.png"
srcset="https://axionl.me/p/ohmyqt-%E7%B3%BB%E5%88%97-01_helloworld/no_z_index_hue6132802dfb0d56078da81ce75c0bc19_420996_480x0_resize_box_2.png 480w, https://axionl.me/p/ohmyqt-%E7%B3%BB%E5%88%97-01_helloworld/no_z_index_hue6132802dfb0d56078da81ce75c0bc19_420996_1024x0_resize_box_2.png 1024w"
width="770"
height="639"
loading="lazy"
alt="no_z_index">
&lt;/a>
&lt;figcaption>no_z_index&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h2 id="事件和交互">事件和交互&lt;/h2>
&lt;p>虽然 &lt;code>QtQuick.Controls&lt;/code> 中提供了 &lt;code>Button&lt;/code> 控件，但是我们仍然可以先为自己创立一个简单的按钮。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-qml" data-lang="qml">&lt;span class="nx">Rectangle&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">id: button&lt;/span>
&lt;span class="k">implicitHeight:&lt;/span> &lt;span class="mi">48&lt;/span>
&lt;span class="k">implicitWidth:&lt;/span> &lt;span class="mi">156&lt;/span>
&lt;span class="k">radius:&lt;/span> &lt;span class="nx">implicitHeight&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;span class="k">border.color:&lt;/span> &lt;span class="s2">&amp;#34;white&amp;#34;&lt;/span> &lt;span class="c1">// 边框颜色
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">color:&lt;/span> &lt;span class="s2">&amp;#34;#ef7e9ceb&amp;#34;&lt;/span> &lt;span class="c1">// 背景颜色
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="nx">Text&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">anchors.verticalCenter:&lt;/span> &lt;span class="nx">parent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">verticalCenter&lt;/span> &lt;span class="c1">// 居中对齐
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">anchors.horizontalCenter:&lt;/span> &lt;span class="nx">parent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">horizontalCenter&lt;/span>
&lt;span class="k">text:&lt;/span> &lt;span class="s2">&amp;#34;初等記憶體&amp;#34;&lt;/span> &lt;span class="c1">// 文字内容
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">color:&lt;/span> &lt;span class="s2">&amp;#34;white&amp;#34;&lt;/span> &lt;span class="c1">// 文字颜色
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="c1">// 覆盖全按键的鼠标动作区域
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">MouseArea&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">anchors.fill:&lt;/span> &lt;span class="nx">parent&lt;/span>
&lt;span class="k">Layout.alignment:&lt;/span> &lt;span class="nx">Qt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">AlignHCenter&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="nx">Qt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">AlignVCenter&lt;/span>
&lt;span class="k">hoverEnabled:&lt;/span> &lt;span class="kc">true&lt;/span> &lt;span class="c1">// 允许响应鼠标停留
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="k">onEntered:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">parent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">color&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">Qt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">lighter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">button&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">color&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.8&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// 进入颜色变深
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">parent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">opacity&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">1.0&lt;/span> &lt;span class="c1">// 不透明
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="k">onExited:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">parent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">color&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">Qt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">lighter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">button&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">color&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.9&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// 退出颜色变浅
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">parent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">opacity&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">0.7&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">onClicked:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">parent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">color&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">Qt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">lighter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">button&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">color&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// 点击颜色变亮
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里有一个常见用法可以将需要设置的属性用 &lt;code>property&lt;/code> 暴露出来，这样便于统一设置和更改，以及将来要写自己组件时便于外部设置，使用 &lt;code>state&lt;/code> 可以提供若干个对象默认状态进行切换，这部分后面会见到。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-qml" data-lang="qml">&lt;span class="nx">Rectangle&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">property&lt;/span> &lt;span class="nx">string&lt;/span> &lt;span class="k">buttonColor:&lt;/span> &lt;span class="s2">&amp;#34;#ef7e9ceb&amp;#34;&lt;/span>
&lt;span class="nx">property&lt;/span> &lt;span class="nx">string&lt;/span> &lt;span class="nx">buttonText&lt;/span>
&lt;span class="k">color:&lt;/span> &lt;span class="nx">buttonColor&lt;/span> &lt;span class="c1">// 引用属性值
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>The Wayland Protocol</title><link>https://axionl.me/p/the-wayland-protocol/</link><pubDate>Sat, 24 Apr 2021 17:32:39 +0800</pubDate><guid>https://axionl.me/p/the-wayland-protocol/</guid><description>&lt;img src="https://axionl.me/p/the-wayland-protocol/wayland.png" alt="Featured image of post The Wayland Protocol" />&lt;blockquote>
&lt;p>最近还在填坑 &amp;ldquo;The Wayland Protocol&amp;rdquo; 这本书的翻译，由于内容比较独立，所以用 &lt;a class="link" href="https://github.com/rust-lang/mdBook" target="_blank" rel="noopener"
>mdbook&lt;/a> 单独构建了一份文档页。目前最大的个感受是其设计模式上和 grpc 有异曲同工之妙，等全篇完工后在博客简要介绍一下，希望不咕。&lt;/p>
&lt;/blockquote>
&lt;p>文档地址：&lt;a class="link" href="https://wayland.axionl.me" target="_blank" rel="noopener"
>wayland.axionl.me&lt;/a>&lt;/p></description></item><item><title>Linux 用户环境变量设置</title><link>https://axionl.me/p/linux-%E7%94%A8%E6%88%B7%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E8%AE%BE%E7%BD%AE/</link><pubDate>Tue, 23 Feb 2021 20:35:26 +0800</pubDate><guid>https://axionl.me/p/linux-%E7%94%A8%E6%88%B7%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E8%AE%BE%E7%BD%AE/</guid><description>&lt;img src="https://axionl.me/p/linux-%E7%94%A8%E6%88%B7%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E8%AE%BE%E7%BD%AE/wallhaven-vmyg6l.jpg" alt="Featured image of post Linux 用户环境变量设置" />&lt;h2 id="序言">序言&lt;/h2>
&lt;p>Linux 下的用户环境变量配置常显得十分琐碎，如 .xprofile、.pam_environment 亦或是各种 shell 配置文件。&lt;/p>
&lt;ul>
&lt;li>.xprofile 受限于 x11 服务，在 wayland 或未启动图形界面等情况下不会被读取。&lt;/li>
&lt;li>.pam_environment 由于提权漏洞频出（如：&lt;a class="link" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2010-4708" target="_blank" rel="noopener"
>CVE-2010-4708&lt;/a>、&lt;a class="link" href="https://nvd.nist.gov/vuln/detail/CVE-2011-3148" target="_blank" rel="noopener"
>CVE-2011-3148&lt;/a>），&lt;strong>已经被上游遗弃&lt;/strong>，一些发行版为了兼容老的用户配置，在 /etc/pam.d/system-login 中临时加入 &lt;code>session required pam_env.so user_readenv=1 &lt;/code> 以恢复读取该文件中环境变量的行为，并非长久之计。&lt;/li>
&lt;/ul>
&lt;p>参考了依云的 &lt;a class="link" href="https://blog.lilydjwg.me/2020/7/22/linux-environment-variables.215496.html" target="_blank" rel="noopener"
>Linux 的环境变量怎么设&lt;/a> 一文，遂选用 systemd 的 &lt;a class="link" href="https://www.freedesktop.org/software/systemd/man/environment.d.html" target="_blank" rel="noopener"
>environment.d&lt;/a> 作为用户环境变量配置方案。&lt;/p>
&lt;h2 id="介绍">介绍&lt;/h2>
&lt;p>配置文件目录如下：&lt;/p>
&lt;ul>
&lt;li>~/.config/environment.d/*.conf [✓]&lt;/li>
&lt;li>/run/environment.d/*.conf&lt;/li>
&lt;li>/etc/environment.d/*.conf&lt;/li>
&lt;li>/usr/lib/environment.d/*.conf&lt;/li>
&lt;li>/etc/environment&lt;/li>
&lt;/ul>
&lt;p>其写法如下：&lt;/p>
&lt;ul>
&lt;li>环境变量=值&lt;/li>
&lt;li>环境变量=${值:-如果为空的默认值}&lt;/li>
&lt;li>环境变量=${值:+添加值}&lt;/li>
&lt;li>可以读取 &lt;code>$HOME&lt;/code>, &lt;code>$PATH&lt;/code> 等原有的环境变量，如：&lt;code>PATH=~/.local/bin:$PATH&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;figure style="flex-grow: 152; flex-basis: 366px">
&lt;a href="https://axionl.me/p/linux-%E7%94%A8%E6%88%B7%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E8%AE%BE%E7%BD%AE/apps.png" data-size="1100x721">&lt;img src="https://axionl.me/p/linux-%E7%94%A8%E6%88%B7%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E8%AE%BE%E7%BD%AE/apps.png"
srcset="https://axionl.me/p/linux-%E7%94%A8%E6%88%B7%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E8%AE%BE%E7%BD%AE/apps_hu1b83020ba751949eb81872429f68c4ce_146399_480x0_resize_box_2.png 480w, https://axionl.me/p/linux-%E7%94%A8%E6%88%B7%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E8%AE%BE%E7%BD%AE/apps_hu1b83020ba751949eb81872429f68c4ce_146399_1024x0_resize_box_2.png 1024w"
width="1100"
height="721"
loading="lazy"
alt="apps.conf">
&lt;/a>
&lt;figcaption>apps.conf&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>由于我是 fish + tmux 用户，需要自己导出一下生成的环境变量文件到命令行。&lt;/p>
&lt;p>&lt;code>~/.config/fish/conf.d/env_init.fish&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fish" data-lang="fish">&lt;span class="k">if&lt;/span> &lt;span class="k">not&lt;/span> &lt;span class="nb">contains&lt;/span> &lt;span class="nv">$USER&lt;/span> &lt;span class="nv">$PATH&lt;/span>
&lt;span class="nf">export&lt;/span> &lt;span class="o">(&lt;/span>/usr/lib/systemd/user&lt;span class="na">-environment-generators&lt;/span>/&lt;span class="m">30&lt;/span>&lt;span class="na">-systemd-environment-d-generator&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;figure style="flex-grow: 152; flex-basis: 366px">
&lt;a href="https://axionl.me/p/linux-%E7%94%A8%E6%88%B7%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E8%AE%BE%E7%BD%AE/show_env.png" data-size="1100x721">&lt;img src="https://axionl.me/p/linux-%E7%94%A8%E6%88%B7%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E8%AE%BE%E7%BD%AE/show_env.png"
srcset="https://axionl.me/p/linux-%E7%94%A8%E6%88%B7%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E8%AE%BE%E7%BD%AE/show_env_hu719fd1b8da5a399c46eca1ab9f3b7901_572168_480x0_resize_box_2.png 480w, https://axionl.me/p/linux-%E7%94%A8%E6%88%B7%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E8%AE%BE%E7%BD%AE/show_env_hu719fd1b8da5a399c46eca1ab9f3b7901_572168_1024x0_resize_box_2.png 1024w"
width="1100"
height="721"
loading="lazy"
alt="show environments">
&lt;/a>
&lt;figcaption>show environments&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h2 id="关于-kdeplasma-的补充">关于 KDE/Plasma 的补充&lt;/h2>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://blog.davidedmundson.co.uk/blog/plasma-and-the-systemd-startup/" target="_blank" rel="noopener"
>Plasma and the systemd startup&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>在 Plasma 5.21 和 Systemd 246 以及后续更新版本中，可以使用 systemd 来启动和管理 KDE 服务。&lt;/p>
&lt;p>其中一个好处在于：其环境变量可直接继承自 &lt;code>environment.d&lt;/code> 而无需再手动设置 &lt;code>systemd-environment-d-generator&lt;/code> 生成的环境变量。&lt;/p>
&lt;p>启用后重启生效。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fish" data-lang="fish">&lt;span class="nv">$ &lt;/span>kwriteconfig5 &lt;span class="na">--file&lt;/span> startkderc &lt;span class="na">--group&lt;/span> General &lt;span class="na">--key&lt;/span> systemdBoot true
&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用 Systemd 进行管理后可利用其 CGroups 限制资源分配和使用等诸多特性（或许可以给你的应用加上 cgproxy?），进一步细化和统一用户配置方案，再次感谢开发者为此做出的努力。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fish" data-lang="fish">&lt;span class="nv">$ &lt;/span>systemctl &lt;span class="na">--user&lt;/span> set&lt;span class="na">-property&lt;/span> app&lt;span class="na">-telegramdesktop-b9317feb02e54b4c93dd1c97a06711a4&lt;/span>.scope &lt;span class="nv">MemoryMax&lt;/span>&lt;span class="o">=&lt;/span>1500M &lt;span class="nv">MemoryLimit&lt;/span>&lt;span class="o">=&lt;/span>1G
&lt;span class="nv">$ &lt;/span>systemctl &lt;span class="na">--user&lt;/span> &lt;span class="nb">status &lt;/span>app&lt;span class="na">-telegramdesktop-b9317feb02e54b4c93dd1c97a06711a4&lt;/span>.scope
● app&lt;span class="na">-telegramdesktop-b9317feb02e54b4c93dd1c97a06711a4&lt;/span>.scope &lt;span class="na">- Telegram&lt;/span> Desktop
&lt;span class="nf">Loaded&lt;/span>: loaded &lt;span class="o">(&lt;/span>/usr/share/applications/telegramdesktop.desktop&lt;span class="p">;&lt;/span> &lt;span class="nf">transient&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nf">Transient&lt;/span>: yes
&lt;span class="nf">Drop-In&lt;/span>: /run/user/&lt;span class="m">1000&lt;/span>/systemd/transient/app&lt;span class="na">-telegramdesktop-b9317feb02e54b4c93dd1c97a06711a4&lt;/span>.scope.d
└─&lt;span class="m">50&lt;/span>&lt;span class="na">-MemoryLimit&lt;/span>.conf, &lt;span class="m">50&lt;/span>&lt;span class="na">-MemoryMax&lt;/span>.conf
&lt;span class="nf">Active&lt;/span>: active &lt;span class="o">(&lt;/span>&lt;span class="nf">running&lt;/span>&lt;span class="o">)&lt;/span> since Tue &lt;span class="m">2021&lt;/span>-&lt;span class="m">02&lt;/span>-&lt;span class="m">23&lt;/span> &lt;span class="m">21&lt;/span>:&lt;span class="m">02&lt;/span>:&lt;span class="m">37&lt;/span> CST&lt;span class="p">;&lt;/span> &lt;span class="nf">5min&lt;/span> ago
&lt;span class="nf">Tasks&lt;/span>: &lt;span class="m">44&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="nf">limit&lt;/span>: &lt;span class="m">18425&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nf">Memory&lt;/span>: &lt;span class="m">351&lt;/span>.0M &lt;span class="o">(&lt;/span>&lt;span class="nf">max&lt;/span>: &lt;span class="m">1&lt;/span>.4G limit: &lt;span class="m">1&lt;/span>.0G&lt;span class="o">)&lt;/span>
&lt;span class="nf">CPU&lt;/span>: &lt;span class="m">20&lt;/span>.056s
&lt;span class="nf">CGroup&lt;/span>: /user.slice/user-&lt;span class="m">1000&lt;/span>.slice/user@&lt;span class="m">1000&lt;/span>.service/app.slice/app&lt;span class="na">-telegramdesktop-b9317feb02e54b4c93dd1c97a06711a4&lt;/span>.scope
└─&lt;span class="m">15363&lt;/span> /usr/bin/telegram&lt;span class="na">-desktop&lt;/span> &lt;span class="na">--
&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[归档] 用 Chezmoi 管理配置文件</title><link>https://axionl.me/p/%E5%BD%92%E6%A1%A3-%E7%94%A8-chezmoi-%E7%AE%A1%E7%90%86%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</link><pubDate>Fri, 29 Jan 2021 10:04:51 +0800</pubDate><guid>https://axionl.me/p/%E5%BD%92%E6%A1%A3-%E7%94%A8-chezmoi-%E7%AE%A1%E7%90%86%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</guid><description>&lt;img src="https://axionl.me/p/%E5%BD%92%E6%A1%A3-%E7%94%A8-chezmoi-%E7%AE%A1%E7%90%86%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/wallhaven-j85o5q.jpg" alt="Featured image of post [归档] 用 Chezmoi 管理配置文件" />&lt;h2 id="前言">前言&lt;/h2>
&lt;blockquote>
&lt;p>项目地址：&lt;a class="link" href="https://github.com/twpayne/chezmoi" target="_blank" rel="noopener"
>twpayne/chezmoi&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>早前看了 Farseerfc 老师这篇译文，开始用 Stow 打理自己家目录中的配置文件，其实现非常简单直接：在一个特定的目录保留原始配置文件，并在其原本对应的位置创建软链接。&lt;/p>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://farseerfc.me/using-gnu-stow-to-manage-your-dotfiles.html" target="_blank" rel="noopener"
>【譯】使用 GNU stow 管理你的點文件 &lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>相比之下，其有如下缺点促使我切换到 Chezmoi:&lt;/p>
&lt;ul>
&lt;li>需要手动创建目录结构，而不是根据现有配置文件来生成&lt;/li>
&lt;li>需要手动建立版本管理，本身不提供备份和恢复等功能&lt;/li>
&lt;li>2.3.0 版本加入了隐藏文件显式命名的方案，但还是需要手动添加 &lt;code>dot-&lt;/code> 前缀&lt;/li>
&lt;li>隐私数据加密&lt;/li>
&lt;/ul>
&lt;h2 id="安装">安装&lt;/h2>
&lt;blockquote>
&lt;p>&lt;a href="https://www.chezmoi.io/docs/install/">https://www.chezmoi.io/docs/install/&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>多数包管理器可以搜索到此包进行安装，包括 Linux、BSD、macOS、Windows 在内的多种平台。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fish" data-lang="fish">&lt;span class="nv">$ &lt;/span>curl &lt;span class="na">-sfL&lt;/span> https://git.io/chezmoi &lt;span class="o">|&lt;/span> &lt;span class="nf">sh&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="快速上手">快速上手&lt;/h2>
&lt;h3 id="初始化">初始化&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fish" data-lang="fish">&lt;span class="nv">$ &lt;/span>chezmoi init &lt;span class="na">--apply&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>这会在 &lt;code>~/.local/share/chezmoi&lt;/code> 中创建一个目录权限为 &lt;code>700&lt;/code> 的 git 仓库，用于保存配置文件。&lt;/p>
&lt;ul>
&lt;li>&lt;code>$ chezmoi source-path&lt;/code> 可以列出其路径&lt;/li>
&lt;li>&lt;code>$ chezmoi cd&lt;/code> 可以直接进入到该目录&lt;/li>
&lt;li>&lt;code>--apply&lt;/code> 参数意为仓库创建后自动添加配置文件，默认为不创建&lt;/li>
&lt;li>&lt;code>$ chezmoi init &amp;lt;git_repo&amp;gt;&lt;/code> 可在新设备上初始化上传的配置仓库&lt;/li>
&lt;/ul>
&lt;p>若包管理器未安装自动补全，则可由下例所示，添加到 &amp;lt;bash/zsh/fish/powershell&amp;gt; 配置当中。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fish" data-lang="fish">&lt;span class="nv">$ &lt;/span>chezmoi completion &lt;span class="nb">fish&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> ~/.config/&lt;span class="nb">fish&lt;/span>/completions/chezmoi.&lt;span class="nb">fish&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>-o &amp;lt;filename&amp;gt;&lt;/code> 输出到文件，默认为标准输出&lt;/li>
&lt;/ul>
&lt;h3 id="添加文件或目录">添加文件或目录&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fish" data-lang="fish">&lt;span class="nv">$ &lt;/span>chezmoi add .nanorc &lt;span class="c"># 添加文件
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="nv">$ &lt;/span>chezmoi add &lt;span class="na">-x&lt;/span> .config/&lt;span class="nb">fish&lt;/span>/&lt;span class="nb">functions&lt;/span>/ &lt;span class="c"># 添加文件夹
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="nv">$ &lt;/span>chezmoi add &lt;span class="na">-xa&lt;/span> .config/&lt;span class="nb">fish&lt;/span>/&lt;span class="nb">functions&lt;/span> &lt;span class="c"># 递归添加文件夹和子目录下的全部内容
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="nv">$ &lt;/span>chezmoi add &lt;span class="na">-T&lt;/span> .xprofile &lt;span class="c"># 添加临时内容
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="nv">$ &lt;/span>chezmoi add .tmux.conf &lt;span class="na">--follow&lt;/span> &lt;span class="c"># 添加软链接对应的原始内容，而不是软链接符号
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="nv">$ &lt;/span>chezmoi managed &lt;span class="c"># 列出所管理的内容路径
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="编辑和应用">编辑和应用&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fish" data-lang="fish">&lt;span class="nv">$ &lt;/span>chezmoi edit ~/.bashrc &lt;span class="na">--apply&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>其默认不带 &lt;code>--apply&lt;/code> 参数，所以编辑完成后也不会直接作用于源文件，&lt;code>--dry-run&lt;/code> 参数可以空运行而不改变目标文件&lt;/li>
&lt;li>&lt;code>$EDITOR&lt;/code> 环境变量决定所使用的编辑器。&lt;/li>
&lt;li>&lt;code>$ chezmoi diff&lt;/code> 以查看改动&lt;/li>
&lt;li>&lt;code>$ chezmoi -v apply&lt;/code> 应用改动&lt;/li>
&lt;/ul>
&lt;h3 id="同步与合并">同步与合并&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fish" data-lang="fish">&lt;span class="nv">$ &lt;/span>chezmoi &lt;span class="nb">source &lt;/span>pull &lt;span class="na">-- --rebase&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nf">chezmoi&lt;/span> diff
&lt;span class="nv">$ &lt;/span>chezmoi apply &lt;span class="na">--verbose&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>其同步操作与 git 本身无异，通过 &lt;code>--&lt;/code> 可以传递所需参数。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fish" data-lang="fish">&lt;span class="nv">$ &lt;/span>chezmoi &lt;span class="nb">source &lt;/span>add .nanorc
&lt;span class="nv">$ &lt;/span>chezmoi &lt;span class="nb">source &lt;/span>commit &lt;span class="na">-- -m&lt;/span> &lt;span class="s2">&amp;#34;Initial commit&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>支持自动提交，但考虑到用户可能意外添加&lt;strong>敏感数据&lt;/strong>的情况下不建议开启，配置文件的介绍将在稍后提到。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="c"># ~/.config/chezmoi/chezmoi.toml&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="nx">sourceVCS&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="nx">autoCommit&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;span class="nx">autoPush&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">false&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>也可以一次打包成压缩包放 U 盘上硬件备份&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fish" data-lang="fish">&lt;span class="nv">$ &lt;/span>chezmoi archive &lt;span class="na">--output&lt;/span>&lt;span class="o">=&lt;/span>dotfiles.tar
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="小结">小结&lt;/h3>
&lt;p>&lt;figure style="flex-grow: 126; flex-basis: 304px">
&lt;a href="https://axionl.me/p/%E5%BD%92%E6%A1%A3-%E7%94%A8-chezmoi-%E7%AE%A1%E7%90%86%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/doctor.png" data-size="1048x826">&lt;img src="https://axionl.me/p/%E5%BD%92%E6%A1%A3-%E7%94%A8-chezmoi-%E7%AE%A1%E7%90%86%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/doctor.png"
srcset="https://axionl.me/p/%E5%BD%92%E6%A1%A3-%E7%94%A8-chezmoi-%E7%AE%A1%E7%90%86%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/doctor_huea984c6c4f2853d86b329b2a50c1808a_791757_480x0_resize_box_2.png 480w, https://axionl.me/p/%E5%BD%92%E6%A1%A3-%E7%94%A8-chezmoi-%E7%AE%A1%E7%90%86%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/doctor_huea984c6c4f2853d86b329b2a50c1808a_791757_1024x0_resize_box_2.png 1024w"
width="1048"
height="826"
loading="lazy"
alt="doctor">
&lt;/a>
&lt;figcaption>doctor&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>其还提供了一个名为 &lt;code>secret&lt;/code> 的参数，是各种加密存储管理软件命令行客户端的包装 (cli wrapper)，&lt;code>chezmoi doctor&lt;/code> 可以检测机器中对应可执行文件的安装状态，此部分内容和应用会在后面的数据模板中提及。&lt;/p>
&lt;p>至此，快速上手基本功能已介绍完毕，初次使用发现它像是一个功能丰富的 wrapper，提供了诸多自动化的帮助，包括编辑、冲突合并、同步和导出备份等。可以注意到一个与其他以软链接形式的 dotfiles manager 不同，由于在设计之初就考虑到了多设备、跨平台的兼容方案，chezmoi 并没有选择以软链接的形式来替换源文档所在路径，一方面提供了改动与应用之间的缓冲，另一方面规避了多平台的兼容性问题。&lt;/p>
&lt;h2 id="数据模板">数据模板&lt;/h2>
&lt;p>以 &lt;a class="link" href="https://gohugo.io/templates/" target="_blank" rel="noopener"
>Hugo&lt;/a> 作为博客或者使用过 &lt;a class="link" href="https://pkg.go.dev/text/template" target="_blank" rel="noopener"
>go template&lt;/a> 的朋友一定不会对此感到陌生，得益于 &lt;code>golang&lt;/code> 的实现，chezmoi 不仅做到了单文件、跨平台使用，还继承了其强大的数据模板功能，可以对于不同的设备实现不同的数据配置，比如配置不同的 &lt;code>ssh key&lt;/code>，这也是与诸多的 dotfiles manager 的不同之处。&lt;/p>
&lt;h3 id="创建模板">创建模板&lt;/h3>
&lt;p>以 &lt;code>.gitconfig&lt;/code> 为例，原文如下：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="p">[&lt;/span>&lt;span class="nx">user&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="nx">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">axionl&lt;/span>
&lt;span class="nx">email&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">axionl&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="nx">example&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">com&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>为了在不同的设备电脑上使用不同的 git 账户这一需求，要将其中的用户信息数据与配置文件进行绑定，而原文件将作为 &lt;code>.tmpl&lt;/code> 为后缀的模板文件保存。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="c"># ~/.local/share/chezmoi/dot_gitconfig.tmpl&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="nx">user&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="nx">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;{{ .name }}&amp;#34;&lt;/span>
&lt;span class="nx">email&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;{{ .email }}&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>模板文件如上，&lt;code>{{ }}&lt;/code> 是 go template 的数据变量标记符，&lt;code>.&lt;/code> 代表了当前变量，即在非循环体内，&lt;code>.&lt;/code> 就代表了传入的那个变量。一般的变量定义可由赋值表达式定义 &lt;code>{{ $variable := Balabala }}&lt;/code>，不过这里 chezmoi 会根据配置文件自动生成和对应。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fish" data-lang="fish">&lt;span class="nv">$ &lt;/span>chezmoi add &lt;span class="na">--autotemplate&lt;/span> ~/.gitconfig
&lt;/code>&lt;/pre>&lt;/div>&lt;p>chezmoi 提供了自动生成模板的功能，但是聪明的生成器未必懂你心意，正如我的 hostname 恰好等于 username 而在其他机器上未必如此。&lt;/p>
&lt;p>&lt;figure style="flex-grow: 380; flex-basis: 913px">
&lt;a href="https://axionl.me/p/%E5%BD%92%E6%A1%A3-%E7%94%A8-chezmoi-%E7%AE%A1%E7%90%86%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/tmpl.png" data-size="544x143">&lt;img src="https://axionl.me/p/%E5%BD%92%E6%A1%A3-%E7%94%A8-chezmoi-%E7%AE%A1%E7%90%86%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/tmpl.png"
srcset="https://axionl.me/p/%E5%BD%92%E6%A1%A3-%E7%94%A8-chezmoi-%E7%AE%A1%E7%90%86%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/tmpl_hu93eb61e53e7ff68b8c9d717727c8f9e4_23718_480x0_resize_box_2.png 480w, https://axionl.me/p/%E5%BD%92%E6%A1%A3-%E7%94%A8-chezmoi-%E7%AE%A1%E7%90%86%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/tmpl_hu93eb61e53e7ff68b8c9d717727c8f9e4_23718_1024x0_resize_box_2.png 1024w"
width="544"
height="143"
loading="lazy"
alt="dot_gitconfig.tmpl">
&lt;/a>
&lt;figcaption>dot_gitconfig.tmpl&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>此时重新 &lt;code>$ chezmoi edit ~/.gitconfig&lt;/code> 对应编辑的就是模板文件（就不要图快加上 &lt;code>--apply&lt;/code> 了，以免产生不必要的手滑）。&lt;code>$ chezmoi data&lt;/code> 的内容便是其妄加猜测的根源，对应变量也可以手动添加使用，如下，根据系统类型来判断模板中的内容是否作用于该机器，&lt;code>-&lt;/code> 符号用于移除前或者后的空格，更多语法可去 &lt;a class="link" href="https://golang.org/pkg/text/template/" target="_blank" rel="noopener"
>go template&lt;/a> 参阅。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go-text-template" data-lang="go-text-template">&lt;span class="x"># ~/.local/share/chezmoi/dot_gitconfig.tmpl
&lt;/span>&lt;span class="x">&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">eq&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.chezmoi.os&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;linux&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">-}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;span class="x">[core]
&lt;/span>&lt;span class="x"> editor = nvim
&lt;/span>&lt;span class="x">&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;span class="x">[core]
&lt;/span>&lt;span class="x"> editor = &lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.github.editor&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;span class="x">&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">-}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>对于大量需要编辑内容的配置文件，也可根据不同机器直接做多份同名文件，并对应进行切换。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go-text-template" data-lang="go-text-template">&lt;span class="x"># symlink_dot_bashrc.tmpl
&lt;/span>&lt;span class="x">.bashrc_&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.chezmoi.os&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这将会创建一个 &lt;code>~/.bashrc&lt;/code> 的软链接到对应的配置文件, 若不希望以软链接形式，&lt;code>{{ include &amp;quot;.bashrc_linux&amp;quot; }}&lt;/code> 可以直接替换为文件。&lt;code>.chezmoiignore&lt;/code> 用于确保对应的系统安装对应的文件，意为如果不匹配，则忽略对应的配置文件，此外还有 &lt;code>.chezmoiremove&lt;/code> 等，详见 &lt;a class="link" href="https://www.chezmoi.io/docs/reference/#chezmoiignore" target="_blank" rel="noopener"
>reference&lt;/a>。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go-text-template" data-lang="go-text-template">&lt;span class="x"># .chezmoiignore
&lt;/span>&lt;span class="x">&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ne&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.chezmoi.os&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;darwin&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;span class="x">.bashrc_darwin
&lt;/span>&lt;span class="x">&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;span class="x">&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ne&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.chezmoi.os&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;linux&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;span class="x">.bashrc_linux
&lt;/span>&lt;span class="x">&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在配置文件内写入对应的数据，TOML 语法可去 &lt;a class="link" href="https://toml.io/" target="_blank" rel="noopener"
>toml.io&lt;/a> 快速上手，大有（声）裨（安）益（利）。除此之外，chezmoi 还支持由 &lt;a class="link" href="https://github.com/spf13/viper" target="_blank" rel="noopener"
>github.com/spf13/viper&lt;/a> 的 &lt;code>json&lt;/code>, &lt;code>hcl&lt;/code>, &lt;code>yaml&lt;/code> 等格式，均以 chezmoi 加不同扩展名命名，将会使用第一个被找到的配置文件。&lt;/p>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://www.chezmoi.io/docs/reference/#configuration-file" target="_blank" rel="noopener"
>配置文件模板&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="c"># ~/.config/chezmoi/chezmoi.toml&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">github&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="nx">editor&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;nano&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>如下命令可临时调试时，脱离模板文件查看变量值是否正确。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fish" data-lang="fish">&lt;span class="nv">$ &lt;/span>chezmoi execute&lt;span class="na">-template&lt;/span> &lt;span class="s1">&amp;#39;{{- .github.editor -}}&amp;#39;&lt;/span>
&lt;span class="nf">nano&lt;/span>⏎
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="编辑配置">编辑配置&lt;/h3>
&lt;p>相比于自动创建模板的南辕北辙，通过智能人工从模板中自动生成 TOML 配置则显得较为靠谱。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go-text-template" data-lang="go-text-template">&lt;span class="x"># ~/test.tmpl
&lt;/span>&lt;span class="x">&lt;/span>&lt;span class="cp">{{-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$email&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">promptString&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;email&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">-}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;span class="x">[data]
&lt;/span>&lt;span class="x"> email = &amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$email&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="x">&amp;#34;
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过 &lt;code>promptString&lt;/code> 这个函数解析等下从命令行中传入的参数，并传入到配置文件中。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fish" data-lang="fish">&lt;span class="nv">$ &lt;/span>chezmoi execute&lt;span class="na">-template&lt;/span> &lt;span class="na">--init&lt;/span> &lt;span class="na">--promptString&lt;/span> &lt;span class="nv">email&lt;/span>&lt;span class="o">=&lt;/span>axionl@example.com &lt;span class="o">&amp;lt;&lt;/span> ~/test.tmpl
&lt;span class="o">[&lt;/span>data&lt;span class="o">]&lt;/span>
&lt;span class="nv">email&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;axionl@example.com&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="管理私有数据">管理私有数据&lt;/h3>
&lt;p>chezmoi 通过检测原有目录和文件权限来判断是否属于私有，通常以 &lt;code>private_&lt;/code> 为前缀， &lt;code>0644&lt;/code> 为权限，&lt;code>~/.local/share/chezmoi&lt;/code> 则为 &lt;code>700&lt;/code> 权限，并且运行时会检查该文件夹权限是否正确。&lt;/p>
&lt;p>以下面三种方式为例，介绍 chezmoi 的加密部分：&lt;/p>
&lt;ul>
&lt;li>GPG&lt;/li>
&lt;li>Gnome Keyring&lt;/li>
&lt;li>KeepassXC&lt;/li>
&lt;/ul>
&lt;p>其余还有 Lastpass, OnePassword 等&lt;a class="link" href="https://www.chezmoi.io/docs/how-to/" target="_blank" rel="noopener"
>用法&lt;/a>。&lt;/p>
&lt;h4 id="gpg">GPG&lt;/h4>
&lt;p>支持对称和非对称密钥加密两种方式。&lt;/p>
&lt;p>非对称加密方式中，可用如下命令查看接受方名称，所用 shell 支持的话也可以 &lt;code>$ gpg --recipient &amp;lt;Tab&amp;gt;&lt;/code> 进行补全。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fish" data-lang="fish">&lt;span class="nv">$ &lt;/span>gpg &lt;span class="na">--list-public-keys&lt;/span>
&lt;span class="nf">pub&lt;/span> ed25519 &lt;span class="m">2019&lt;/span>-&lt;span class="m">07&lt;/span>-&lt;span class="m">04&lt;/span> &lt;span class="o">[&lt;/span>SC&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>expires: &lt;span class="m">2024&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="m">07&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="m">02&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="nf">1FDBDCE2D26BD8F100EE2E73B1B9AAD8BE7E7326&lt;/span>
&lt;span class="nf">uid&lt;/span> &lt;span class="o">[&lt;/span>ultimate&lt;span class="o">]&lt;/span> ArielAxionL &lt;span class="o">&amp;lt;&lt;/span>i@axionl.me&lt;span class="o">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>以接受方竟是我自己为例，在配置文件 &lt;code>chezmoi.toml&lt;/code> 中填入：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="c"># ~/.config/chezmoi/chezmoi.toml&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="nx">gpg&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="nx">recipient&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;ArielAxionL&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>将文件加密并添加，chezmoi 默认使用了 &lt;code>gpg --armor&lt;/code> 参数使得加密文件可读，可以通过配置中，的 &lt;code>command&lt;/code> 字段来定义 gpg 的其他参数。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fish" data-lang="fish">&lt;span class="nv">$ &lt;/span>chezmoi add &lt;span class="na">--encrypt&lt;/span> test.toml
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;figure style="flex-grow: 140; flex-basis: 337px">
&lt;a href="https://axionl.me/p/%E5%BD%92%E6%A1%A3-%E7%94%A8-chezmoi-%E7%AE%A1%E7%90%86%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/gpg-encrypt.png" data-size="903x643">&lt;img src="https://axionl.me/p/%E5%BD%92%E6%A1%A3-%E7%94%A8-chezmoi-%E7%AE%A1%E7%90%86%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/gpg-encrypt.png"
srcset="https://axionl.me/p/%E5%BD%92%E6%A1%A3-%E7%94%A8-chezmoi-%E7%AE%A1%E7%90%86%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/gpg-encrypt_huee69e1b318899adb832639385df9f612_157054_480x0_resize_box_2.png 480w, https://axionl.me/p/%E5%BD%92%E6%A1%A3-%E7%94%A8-chezmoi-%E7%AE%A1%E7%90%86%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/gpg-encrypt_huee69e1b318899adb832639385df9f612_157054_1024x0_resize_box_2.png 1024w"
width="903"
height="643"
loading="lazy"
alt="加密内容">
&lt;/a>
&lt;figcaption>加密内容&lt;/figcaption>
&lt;/figure> &lt;figure style="flex-grow: 165; flex-basis: 397px">
&lt;a href="https://axionl.me/p/%E5%BD%92%E6%A1%A3-%E7%94%A8-chezmoi-%E7%AE%A1%E7%90%86%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/gpg-decrypt.png" data-size="1064x643">&lt;img src="https://axionl.me/p/%E5%BD%92%E6%A1%A3-%E7%94%A8-chezmoi-%E7%AE%A1%E7%90%86%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/gpg-decrypt.png"
srcset="https://axionl.me/p/%E5%BD%92%E6%A1%A3-%E7%94%A8-chezmoi-%E7%AE%A1%E7%90%86%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/gpg-decrypt_hu7646430154d2e9eeed6a196a2da92269_150043_480x0_resize_box_2.png 480w, https://axionl.me/p/%E5%BD%92%E6%A1%A3-%E7%94%A8-chezmoi-%E7%AE%A1%E7%90%86%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/gpg-decrypt_hu7646430154d2e9eeed6a196a2da92269_150043_1024x0_resize_box_2.png 1024w"
width="1064"
height="643"
loading="lazy"
alt="解密内容">
&lt;/a>
&lt;figcaption>解密内容&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>对称加密：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="c"># ~/.config/chezmoi/chezmoi.toml&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="nx">gpg&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="nx">symmetric&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="gnome-keyring">Gnome Keyring&lt;/h4>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://github.com/zalando/go-keyring" target="_blank" rel="noopener"
>github.com/zalando/go-keyring&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>Linux 中环境下，keyring 的实现目前还只支持 gnome-keyring，希望以后也能提供 kwallet 版本的接口。macOS 则支持 Keychain 存储帐号密码。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fish" data-lang="fish">&lt;span class="nv">$ &lt;/span>chezmoi secret keyring set &lt;span class="na">--service&lt;/span>&lt;span class="o">=&lt;/span>github &lt;span class="na">--user&lt;/span>&lt;span class="o">=&amp;lt;&lt;/span>github&lt;span class="na">-user&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="nf">Password&lt;/span>: &lt;span class="o">&amp;lt;&lt;/span>github&lt;span class="na">-token&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>将 &lt;code>set&lt;/code> 替换成 &lt;code>get&lt;/code> 从命令行拿到所存密令，或者使用 &lt;a class="link" href="https://wiki.gnome.org/Apps/Seahorse" target="_blank" rel="noopener"
>Seahorse&lt;/a> 客户端查看。&lt;/p>
&lt;p>&lt;figure style="flex-grow: 125; flex-basis: 300px">
&lt;a href="https://axionl.me/p/%E5%BD%92%E6%A1%A3-%E7%94%A8-chezmoi-%E7%AE%A1%E7%90%86%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/seahorse.png" data-size="829x663">&lt;img src="https://axionl.me/p/%E5%BD%92%E6%A1%A3-%E7%94%A8-chezmoi-%E7%AE%A1%E7%90%86%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/seahorse.png"
srcset="https://axionl.me/p/%E5%BD%92%E6%A1%A3-%E7%94%A8-chezmoi-%E7%AE%A1%E7%90%86%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/seahorse_hu3fea8af086834637024aba37480cea75_258598_480x0_resize_box_2.png 480w, https://axionl.me/p/%E5%BD%92%E6%A1%A3-%E7%94%A8-chezmoi-%E7%AE%A1%E7%90%86%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/seahorse_hu3fea8af086834637024aba37480cea75_258598_1024x0_resize_box_2.png 1024w"
width="829"
height="663"
loading="lazy"
alt="Seahorse 是一个管理 gnome-keyring 的软件">
&lt;/a>
&lt;figcaption>Seahorse 是一个管理 gnome-keyring 的软件&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go-text-template" data-lang="go-text-template">&lt;span class="x"># ~/.local/share/chezmoi/dot_gitconfig.tmpl
&lt;/span>&lt;span class="x">
&lt;/span>&lt;span class="x">[github]
&lt;/span>&lt;span class="x"> user = &amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.github.user&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="x">&amp;#34;
&lt;/span>&lt;span class="x"> token = &amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">keyring&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;github&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.github.user&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="x">&amp;#34;
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>chezmoi.toml&lt;/code> 配置文件中写明用户名，模板中便可自动取用 gnome-keyring 先前所存 token，keyring 一般会在用户登陆时自动解锁 &lt;a class="link" href="https://wiki.archlinux.org/index.php/GNOME/Keyring" target="_blank" rel="noopener"
>GNOME/Keyring&lt;/a>。&lt;/p>
&lt;h3 id="keepassxc">KeepassXC&lt;/h3>
&lt;p>配置文件&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="c"># ~/.config/chezmoi/chezmoi.toml&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="nx">keepassxc&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="nx">args&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;--key-file&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;/path/to/your/key&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="nx">database&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;/path/to/your/kdbx&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>默认字段有 &lt;code>Notes&lt;/code>, &lt;code>Password&lt;/code>, &lt;code>URL&lt;/code>, &lt;code>Username&lt;/code>, 测试获得密码字段，Entry 可以填入保存密码的 Title，keepassxc-cli 会返回一个匹配的结果。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fish" data-lang="fish">&lt;span class="nv">$ &lt;/span>chezmoi execute&lt;span class="na">-template&lt;/span> &lt;span class="s1">&amp;#39;{{ (keepassxc &amp;#34;&amp;lt;YourEntry&amp;gt;&amp;#34;).Password }}&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>KeepassXC 支持自定义字段，比如你的密钥：
&lt;img src="https://axionl.me/attributes.png" alt="KeepassXC Entry Attributes" />&lt;/p>
&lt;p>在模板中用 &lt;code>keepassxcAttribute&lt;/code> 获取：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fish" data-lang="fish">&lt;span class="nv">$ &lt;/span>chezmoi execute&lt;span class="na">-template&lt;/span> &lt;span class="s1">&amp;#39;{{ keepassxcAttribute &amp;#34;VPS Keyring&amp;#34; &amp;#34;public-key&amp;#34; }}&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="结束">结束&lt;/h2>
&lt;p>得益于数据模板的引入，chezmoi 作为一款 dotfiles manager，其配置管理功能相较之下更加强大，也有更多新的功能和应用场景可以发掘。&lt;/p></description></item><item><title>[归档] Hello, My Firefox</title><link>https://axionl.me/p/%E5%BD%92%E6%A1%A3-hello-my-firefox/</link><pubDate>Wed, 27 Jan 2021 16:24:43 +0800</pubDate><guid>https://axionl.me/p/%E5%BD%92%E6%A1%A3-hello-my-firefox/</guid><description>&lt;img src="https://axionl.me/p/%E5%BD%92%E6%A1%A3-hello-my-firefox/wallhaven-eo5jko.png" alt="Featured image of post [归档] Hello, My Firefox" />&lt;blockquote>
&lt;p>自用配置项，持续更新中&amp;hellip;&amp;hellip;&lt;/p>
&lt;/blockquote>
&lt;h2 id="选项">选项&lt;/h2>
&lt;ul>
&lt;li>允许加载用户样式文件（userChrome.css）&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="na">toolkit.legacyUserProfileCustomizations.stylesheets&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">true&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>调整浏览器标签宽度&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="na">browser.tabs.tabClipWidth&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">83&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>硬件加速&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="na">media.ffmpeg.vaapi.enabled&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">true&lt;/span>
&lt;span class="na">media.ffvpx.enabled&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">false&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>配合系统环境变量使用 &lt;code>MOZ_X11_EGL=1&lt;/code> 或 &lt;code>MOZ_ENABLE_WAYLAND=1&lt;/code>，&lt;code>MOZ_WEBRENDER=1&lt;/code>&lt;/p>
&lt;ul>
&lt;li>Devtools&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="na">devtools.editor.tabsize&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">4&lt;/span>
&lt;span class="na">devtools.debugger.remote-enabled&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">true&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>DevTools 中还有 &lt;code>Enable browser chrome and add-on debugging toolboxes&lt;/code> 可以打开，调试扩展常用选项&lt;/p>
&lt;ul>
&lt;li>易用模式&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="na">accessibility.typeaheadfind.enablesound&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">false&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>默认开了这个选项，导致 Ctrl+F 搜索不到结果的时候笔记本的蜂鸣器会吼得很大声&lt;/p>
&lt;h2 id="主题">主题&lt;/h2>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/5405629/45172944-21d91900-b24a-11e8-8bc5-03814121b0de.png" alt="MaterialFox Preview" />&lt;/p>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://github.com/muckSponge/MaterialFox" target="_blank" rel="noopener"
>MaterialFox&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="扩展">扩展&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://addons.mozilla.org/en-US/firefox/addon/tree-style-tab" target="_blank" rel="noopener"
>Tree Style Tab&lt;/a>&lt;/p>
&lt;p>&lt;figure style="flex-grow: 146; flex-basis: 352px">
&lt;a href="https://axionl.me/p/%E5%BD%92%E6%A1%A3-hello-my-firefox/preview.png" data-size="1072x730">&lt;img src="https://axionl.me/p/%E5%BD%92%E6%A1%A3-hello-my-firefox/preview.png"
srcset="https://axionl.me/p/%E5%BD%92%E6%A1%A3-hello-my-firefox/preview_hu9072e42a2e616cef52575a9e53a82241_181317_480x0_resize_box_2.png 480w, https://axionl.me/p/%E5%BD%92%E6%A1%A3-hello-my-firefox/preview_hu9072e42a2e616cef52575a9e53a82241_181317_1024x0_resize_box_2.png 1024w"
width="1072"
height="730"
loading="lazy"
alt="TST Preview">
&lt;/a>
&lt;figcaption>TST Preview&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>userChrome.css 外部配置 &lt;a class="link" href="https://github.com/axionl/dotfiles/blob/14ARE/private_dot_mozilla/csstheme/TreeStyleTab/treestyletab.css" target="_blank" rel="noopener"
>treestyletab.css&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>插件内嵌样式配置 &lt;a class="link" href="https://github.com/axionl/dotfiles/blob/14ARE/private_dot_mozilla/csstheme/TreeStyleTab/custom.css" target="_blank" rel="noopener"
>custom.css&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>调试插件样式的方法&lt;/p>
&lt;ol>
&lt;li>&lt;figure style="flex-grow: 132; flex-basis: 317px">
&lt;a href="https://axionl.me/p/%E5%BD%92%E6%A1%A3-hello-my-firefox/debug_add_ons.png" data-size="396x299">&lt;img src="https://axionl.me/p/%E5%BD%92%E6%A1%A3-hello-my-firefox/debug_add_ons.png"
srcset="https://axionl.me/p/%E5%BD%92%E6%A1%A3-hello-my-firefox/debug_add_ons_hu9836c956d3836efb369769b8ab969da9_19689_480x0_resize_box_2.png 480w, https://axionl.me/p/%E5%BD%92%E6%A1%A3-hello-my-firefox/debug_add_ons_hu9836c956d3836efb369769b8ab969da9_19689_1024x0_resize_box_2.png 1024w"
width="396"
height="299"
loading="lazy"
alt="Debug Add-ons">
&lt;/a>
&lt;figcaption>Debug Add-ons&lt;/figcaption>
&lt;/figure>&lt;/li>
&lt;li>&lt;figure style="flex-grow: 327; flex-basis: 787px">
&lt;a href="https://axionl.me/p/%E5%BD%92%E6%A1%A3-hello-my-firefox/debug_runtime.png" data-size="692x211">&lt;img src="https://axionl.me/p/%E5%BD%92%E6%A1%A3-hello-my-firefox/debug_runtime.png"
srcset="https://axionl.me/p/%E5%BD%92%E6%A1%A3-hello-my-firefox/debug_runtime_hua8fcf25883582b3b0b7d6969060f8602_20453_480x0_resize_box_2.png 480w, https://axionl.me/p/%E5%BD%92%E6%A1%A3-hello-my-firefox/debug_runtime_hua8fcf25883582b3b0b7d6969060f8602_20453_1024x0_resize_box_2.png 1024w"
width="692"
height="211"
loading="lazy"
alt="Debug Runtime">
&lt;/a>
&lt;figcaption>Debug Runtime&lt;/figcaption>
&lt;/figure>&lt;/li>
&lt;li>&lt;figure style="flex-grow: 162; flex-basis: 390px">
&lt;a href="https://axionl.me/p/%E5%BD%92%E6%A1%A3-hello-my-firefox/debug_tst_page.png" data-size="296x182">&lt;img src="https://axionl.me/p/%E5%BD%92%E6%A1%A3-hello-my-firefox/debug_tst_page.png"
srcset="https://axionl.me/p/%E5%BD%92%E6%A1%A3-hello-my-firefox/debug_tst_page_huf113180348d425f9b61ec67b0e48fd76_12019_480x0_resize_box_2.png 480w, https://axionl.me/p/%E5%BD%92%E6%A1%A3-hello-my-firefox/debug_tst_page_huf113180348d425f9b61ec67b0e48fd76_12019_1024x0_resize_box_2.png 1024w"
width="296"
height="182"
loading="lazy"
alt="Debug TST Page">
&lt;/a>
&lt;figcaption>Debug TST Page&lt;/figcaption>
&lt;/figure>&lt;/li>
&lt;li>&lt;figure style="flex-grow: 179; flex-basis: 430px">
&lt;a href="https://axionl.me/p/%E5%BD%92%E6%A1%A3-hello-my-firefox/debug_tst.png" data-size="1392x776">&lt;img src="https://axionl.me/p/%E5%BD%92%E6%A1%A3-hello-my-firefox/debug_tst.png"
srcset="https://axionl.me/p/%E5%BD%92%E6%A1%A3-hello-my-firefox/debug_tst_hu6900f4fa9af3b1268034c8626457e55b_248265_480x0_resize_box_2.png 480w, https://axionl.me/p/%E5%BD%92%E6%A1%A3-hello-my-firefox/debug_tst_hu6900f4fa9af3b1268034c8626457e55b_248265_1024x0_resize_box_2.png 1024w"
width="1392"
height="776"
loading="lazy"
alt="Debug TST">
&lt;/a>
&lt;figcaption>Debug TST&lt;/figcaption>
&lt;/figure>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://addons.mozilla.org/en-US/firefox/addon/tst-bookmarks-subpanel" target="_blank" rel="noopener"
>TST Bookmarks Subpanel&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://addons.cdn.mozilla.net/user-media/previews/thumbs/220/220713.png" alt="TST Bookmarks Preview" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://addons.mozilla.org/en-US/firefox/addon/switchyomega" target="_blank" rel="noopener"
>SwitchyOmega&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://addons.cdn.mozilla.net/user-media/previews/thumbs/183/183855.png" alt="SwitchyOmega Preview" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://addons.mozilla.org/zh-CN/firefox/addon/auto-tab-discard" target="_blank" rel="noopener"
>Auto Tab Discard&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://addons.mozilla.org/en-US/firefox/addon/keepassxc-browser" target="_blank" rel="noopener"
>Keepassxc Browser&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://addons.cdn.mozilla.net/user-media/previews/thumbs/234/234592.png" alt="Keepassxc Browser Preview" />&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://addons.mozilla.org/en-US/firefox/addon/plasma-integration" target="_blank" rel="noopener"
>Plasma Integration&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://addons.cdn.mozilla.net/user-media/previews/thumbs/202/202551.png" alt="Plasma Integration Preview" />&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://addons.mozilla.org/en-US/firefox/addon/ext-saladict" target="_blank" rel="noopener"
>Saladict&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://addons.cdn.mozilla.net/user-media/previews/thumbs/203/203286.png" alt="Saladict Preview" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://addons.mozilla.org/en-US/firefox/addon/tampermonkey" target="_blank" rel="noopener"
>Tampermonkey&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://addons.cdn.mozilla.net/user-media/previews/thumbs/170/170870.png" alt="Tampermonkey Preview" />&lt;/p>
&lt;ul>
&lt;li>一个用于 &lt;a class="link" href="https://github.com/axionl/dotfiles/blob/14ARE/private_dot_mozilla/csstheme/Tampermonkey/archwiki.js" target="_blank" rel="noopener"
>ArchWiki 目录&lt;/a> 侧边显示的脚本&lt;/li>
&lt;/ul>
&lt;p>&lt;figure style="flex-grow: 175; flex-basis: 422px">
&lt;a href="https://axionl.me/p/%E5%BD%92%E6%A1%A3-hello-my-firefox/archwiki.png" data-size="1756x998">&lt;img src="https://axionl.me/p/%E5%BD%92%E6%A1%A3-hello-my-firefox/archwiki.png"
srcset="https://axionl.me/p/%E5%BD%92%E6%A1%A3-hello-my-firefox/archwiki_hu84283574b4dae8df688d8adb95f9e671_238647_480x0_resize_box_2.png 480w, https://axionl.me/p/%E5%BD%92%E6%A1%A3-hello-my-firefox/archwiki_hu84283574b4dae8df688d8adb95f9e671_238647_1024x0_resize_box_2.png 1024w"
width="1756"
height="998"
loading="lazy"
alt="ArchWiki TOC">
&lt;/a>
&lt;figcaption>ArchWiki TOC&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://addons.mozilla.org/en-US/firefox/addon/user-agent-string-switcher" target="_blank" rel="noopener"
>User-Agent Switcher and Manager&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://addons.cdn.mozilla.net/user-media/previews/thumbs/188/188200.png" alt="User-Agent Switcher and Manager Preview" />&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>在 QEMU/KVM 虚拟机上安装 NixOS 发行版</title><link>https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/</link><pubDate>Thu, 07 Jan 2021 22:57:51 +0800</pubDate><guid>https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/</guid><description>&lt;img src="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/preview.png" alt="Featured image of post 在 QEMU/KVM 虚拟机上安装 NixOS 发行版" />&lt;h2 id="前言">前言&lt;/h2>
&lt;p>2019 年 1 月的时候知道了这个发行版，当时 &lt;code>@NixOS_zh&lt;/code> 群刚建立（&lt;del>后来这群凉了&lt;/del>），就开虚拟机玩了一下，时隔多年发现又有不少人对其颇感兴趣，便决定重新写一下安装相关的教程。&lt;/p>
&lt;p>&lt;strong>本文以 Arch Linux 作为宿主机，大体步骤与 Arch Wiki 相近&lt;/strong>&lt;/p>
&lt;h2 id="qemukvm-虚拟机配置">QEMU/KVM 虚拟机配置&lt;/h2>
&lt;blockquote>
&lt;p>ArchLinux Wiki: &lt;a class="link" href="https://wiki.archlinux.org/index.php/KVM" target="_blank" rel="noopener"
>KVM&lt;/a>
| &lt;a class="link" href="https://wiki.archlinux.org/index.php/QEMU" target="_blank" rel="noopener"
>QEMU&lt;/a>
| &lt;a class="link" href="https://wiki.archlinux.org/index.php/Libvirt" target="_blank" rel="noopener"
>Libvirt&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h3 id="0-检测硬件是否支持-kvm">0. 检测硬件是否支持 KVM&lt;/h3>
&lt;p>一般情况下需要进入到 &lt;code>BIOS&lt;/code> 对应页面打开虚拟化支持，常见对应设置项如下：&lt;/p>
&lt;ul>
&lt;li>AMD: SVM Support&lt;/li>
&lt;li>Intel: Intel Virtual Technology&lt;/li>
&lt;/ul>
&lt;p>开启虚拟化后在宿主机上用命令行检测（比如我的是 AMD 的处理器）：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ &lt;span class="nv">LC_ALL&lt;/span>&lt;span class="o">=&lt;/span>C lscpu &lt;span class="p">|&lt;/span> grep Virtualization
Virtualization: AMD-V
&lt;/code>&lt;/pre>&lt;/div>&lt;p>内核支持检测，如果使用的是 ArchLinux 提供的官方内核，即 &lt;code>core/linux&lt;/code> 则已经包含了对应的 kvm 模块（&lt;code>kvm&lt;/code>、&lt;code>kvm_amd&lt;/code>或&lt;code>kvm_intel&lt;/code>）:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ zgrep CONFIG_KVM /proc/config.gz
&lt;span class="nv">CONFIG_KVM_GUEST&lt;/span>&lt;span class="o">=&lt;/span>y
&lt;span class="nv">CONFIG_KVM_MMIO&lt;/span>&lt;span class="o">=&lt;/span>y
&lt;span class="nv">CONFIG_KVM_ASYNC_PF&lt;/span>&lt;span class="o">=&lt;/span>y
&lt;span class="nv">CONFIG_KVM_VFIO&lt;/span>&lt;span class="o">=&lt;/span>y
&lt;span class="nv">CONFIG_KVM_GENERIC_DIRTYLOG_READ_PROTECT&lt;/span>&lt;span class="o">=&lt;/span>y
&lt;span class="nv">CONFIG_KVM_COMPAT&lt;/span>&lt;span class="o">=&lt;/span>y
&lt;span class="nv">CONFIG_KVM_XFER_TO_GUEST_WORK&lt;/span>&lt;span class="o">=&lt;/span>y
&lt;span class="nv">CONFIG_KVM&lt;/span>&lt;span class="o">=&lt;/span>m
&lt;span class="nv">CONFIG_KVM_INTEL&lt;/span>&lt;span class="o">=&lt;/span>m
&lt;span class="nv">CONFIG_KVM_AMD&lt;/span>&lt;span class="o">=&lt;/span>m &lt;span class="c1"># 可以看到有该模块&lt;/span>
&lt;span class="nv">CONFIG_KVM_AMD_SEV&lt;/span>&lt;span class="o">=&lt;/span>y
&lt;span class="nv">CONFIG_KVM_MMU_AUDIT&lt;/span>&lt;span class="o">=&lt;/span>y
&lt;/code>&lt;/pre>&lt;/div>&lt;p>查看这些内核模块是否已自动加载：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ lsmod &lt;span class="p">|&lt;/span>grep kvm
kvm_amd &lt;span class="m">114688&lt;/span> &lt;span class="m">8&lt;/span>
ccp &lt;span class="m">118784&lt;/span> &lt;span class="m">1&lt;/span> kvm_amd
kvm &lt;span class="m">933888&lt;/span> &lt;span class="m">1&lt;/span> kvm_amd
irqbypass &lt;span class="m">16384&lt;/span> &lt;span class="m">1&lt;/span> kvm
&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果没有自动加载则手动：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ sudo modprobe kvm
$ sudo modprobe kvm_amd &lt;span class="c1"># 对应你的 CPU 类型&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="1-准虚拟化使用-virtio">1. 准虚拟化（使用 VIRTIO）&lt;/h3>
&lt;p>检测 VIRTIO 模块是否可用：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ zgrep VIRTIO /proc/config.gz
&lt;span class="nv">CONFIG_BLK_MQ_VIRTIO&lt;/span>&lt;span class="o">=&lt;/span>y
&lt;span class="nv">CONFIG_VIRTIO_VSOCKETS&lt;/span>&lt;span class="o">=&lt;/span>m
&lt;span class="nv">CONFIG_VIRTIO_VSOCKETS_COMMON&lt;/span>&lt;span class="o">=&lt;/span>m
&lt;span class="nv">CONFIG_NET_9P_VIRTIO&lt;/span>&lt;span class="o">=&lt;/span>m
&lt;span class="nv">CONFIG_VIRTIO_BLK&lt;/span>&lt;span class="o">=&lt;/span>m
&lt;span class="nv">CONFIG_SCSI_VIRTIO&lt;/span>&lt;span class="o">=&lt;/span>m
&lt;span class="nv">CONFIG_VIRTIO_NET&lt;/span>&lt;span class="o">=&lt;/span>m
&lt;span class="nv">CONFIG_VIRTIO_CONSOLE&lt;/span>&lt;span class="o">=&lt;/span>m
&lt;span class="nv">CONFIG_HW_RANDOM_VIRTIO&lt;/span>&lt;span class="o">=&lt;/span>m
&lt;span class="nv">CONFIG_DRM_VIRTIO_GPU&lt;/span>&lt;span class="o">=&lt;/span>m
&lt;span class="nv">CONFIG_VIRTIO&lt;/span>&lt;span class="o">=&lt;/span>y
&lt;span class="nv">CONFIG_VIRTIO_MENU&lt;/span>&lt;span class="o">=&lt;/span>y
&lt;span class="nv">CONFIG_VIRTIO_PCI&lt;/span>&lt;span class="o">=&lt;/span>m
&lt;span class="nv">CONFIG_VIRTIO_PCI_LEGACY&lt;/span>&lt;span class="o">=&lt;/span>y
&lt;span class="nv">CONFIG_VIRTIO_VDPA&lt;/span>&lt;span class="o">=&lt;/span>m
&lt;span class="nv">CONFIG_VIRTIO_PMEM&lt;/span>&lt;span class="o">=&lt;/span>m
&lt;span class="nv">CONFIG_VIRTIO_BALLOON&lt;/span>&lt;span class="o">=&lt;/span>m
&lt;span class="nv">CONFIG_VIRTIO_MEM&lt;/span>&lt;span class="o">=&lt;/span>m
&lt;span class="nv">CONFIG_VIRTIO_INPUT&lt;/span>&lt;span class="o">=&lt;/span>m
&lt;span class="nv">CONFIG_VIRTIO_MMIO&lt;/span>&lt;span class="o">=&lt;/span>m
&lt;span class="nv">CONFIG_VIRTIO_MMIO_CMDLINE_DEVICES&lt;/span>&lt;span class="o">=&lt;/span>y
&lt;span class="nv">CONFIG_VIRTIO_DMA_SHARED_BUFFER&lt;/span>&lt;span class="o">=&lt;/span>m
&lt;span class="nv">CONFIG_RPMSG_VIRTIO&lt;/span>&lt;span class="o">=&lt;/span>m
&lt;span class="nv">CONFIG_VIRTIO_FS&lt;/span>&lt;span class="o">=&lt;/span>m
&lt;span class="nv">CONFIG_CRYPTO_DEV_VIRTIO&lt;/span>&lt;span class="o">=&lt;/span>m
&lt;/code>&lt;/pre>&lt;/div>&lt;p>准虚拟化设备列表（主要确保以下几个模块有对应开启，若未开启则手动用 &lt;code>modprobe&lt;/code> 命令开启）：&lt;/p>
&lt;ul>
&lt;li>网络设备 (virtio-net)&lt;/li>
&lt;li>硬盘设备 (virtio-blk)&lt;/li>
&lt;li>控制器设备 (virtio-scsi)&lt;/li>
&lt;/ul>
&lt;h3 id="2-安装-qemu">2. 安装 QEMU&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ sudo pacman -S qemu
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>Arch Wiki: &lt;a class="link" href="https://wiki.archlinux.org/index.php/PCI_passthrough_via_OVMF#Setting_up_IOMMU" target="_blank" rel="noopener"
>PCI 直通&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>如果需要启用 PCI 直通功能则需要在内核参数中添加 &lt;code>intel_iommu=on&lt;/code> 或者 &lt;code>amd_iommu=on&lt;/code>，同时可以在其后添加 &lt;code>iommu=pt&lt;/code>，以防前者失效，以下命令检测是否开启成功，由于本人所用 &lt;code>AMD Ryzen 5 4600U&lt;/code> 支持方面还有些问题，故此不做展示。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ sudo dmesg &lt;span class="p">|&lt;/span> grep -i -e DMAR -e IOMMU
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-安装-libvirt">3. 安装 libvirt&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ sudo pacman -S libvirt virt-manager dnsmasq edk2-ovmf
&lt;/code>&lt;/pre>&lt;/div>&lt;p>为了避免每次都需要询问 &lt;code>root&lt;/code> 密码，建议将自己的用户添加到 &lt;code>libvirt&lt;/code> 组：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ sudo usermod -aG libvirt &amp;lt;YourUserName&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>编辑服务端配置文件 &lt;code>/etc/libvirt/libvirtd.conf&lt;/code>，取消如下几行的注释：&lt;/p>
&lt;pre>&lt;code class="language-config" data-lang="config">unix_sock_group = &amp;quot;libvirt&amp;quot;
unix_sock_ro_perms = &amp;quot;0777&amp;quot; # set to 0770 to deny on-group libvirt users
unix_sock_rw_perms = &amp;quot;0770&amp;quot;
auth_unix_ro = &amp;quot;none&amp;quot;
auth_unix_rw = &amp;quot;none&amp;quot;
&lt;/code>&lt;/pre>&lt;p>同时添加 ipv4 的内核转发参数：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ sudo &lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;net.ipv4.ip_forward = 1&amp;#39;&lt;/span> &amp;gt;&amp;gt; /etc/sysctl.d/00-network.conf
&lt;/code>&lt;/pre>&lt;/div>&lt;p>设置开机启动和运行服务。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ sudo systemctl &lt;span class="nb">enable&lt;/span> --now libvirtd.service
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="4-配置-virt-manager">4. 配置 virt-manager&lt;/h3>
&lt;p>&lt;figure style="flex-grow: 302; flex-basis: 726px">
&lt;a href="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/add_connection.png" data-size="799x264">&lt;img src="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/add_connection.png"
srcset="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/add_connection_hua6b2f70857beea847a4e403761694cf4_45516_480x0_resize_box_2.png 480w, https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/add_connection_hua6b2f70857beea847a4e403761694cf4_45516_1024x0_resize_box_2.png 1024w"
width="799"
height="264"
loading="lazy"
alt="添加连接">
&lt;/a>
&lt;figcaption>添加连接&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>建议重启以应用之前的设置，此时在 &lt;code>Virtual Machine Manager&lt;/code> 的界面应该可以看到一些已经连接上的服务端，如果没有则在菜单栏自行添加，推荐初次连接系统级服务来创建虚拟机。&lt;/p>
&lt;p>&lt;figure style="flex-grow: 96; flex-basis: 230px">
&lt;a href="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/new_vm.png" data-size="547x569">&lt;img src="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/new_vm.png"
srcset="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/new_vm_hu8d65781e9df1dff7162eeaf71bdeb11e_38276_480x0_resize_box_2.png 480w, https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/new_vm_hu8d65781e9df1dff7162eeaf71bdeb11e_38276_1024x0_resize_box_2.png 1024w"
width="547"
height="569"
loading="lazy"
alt="添加虚拟机">
&lt;/a>
&lt;figcaption>添加虚拟机&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://nixos.org/download.html#nixos-iso" target="_blank" rel="noopener"
>NixOS 镜像下载&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>将下载到的镜像文件&lt;strong>所在目录&lt;/strong>创建为文件系统池，随后在其中选择镜像文件进行加载。&lt;/p>
&lt;p>&lt;figure style="flex-grow: 115; flex-basis: 278px">
&lt;a href="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/add_image_pool.png" data-size="544x469">&lt;img src="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/add_image_pool.png"
srcset="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/add_image_pool_hu970b1afb910bcaae4894d29acb9106cc_27256_480x0_resize_box_2.png 480w, https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/add_image_pool_hu970b1afb910bcaae4894d29acb9106cc_27256_1024x0_resize_box_2.png 1024w"
width="544"
height="469"
loading="lazy"
alt="添加镜像池">
&lt;/a>
&lt;figcaption>添加镜像池&lt;/figcaption>
&lt;/figure> &lt;figure style="flex-grow: 138; flex-basis: 333px">
&lt;a href="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/select_image.png" data-size="790x569">&lt;img src="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/select_image.png"
srcset="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/select_image_hu2a8c4f1d1d239972d45bfa5118d53040_41702_480x0_resize_box_2.png 480w, https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/select_image_hu2a8c4f1d1d239972d45bfa5118d53040_41702_1024x0_resize_box_2.png 1024w"
width="790"
height="569"
loading="lazy"
alt="选择镜像">
&lt;/a>
&lt;figcaption>选择镜像&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>设置合适的系统资源和网络配置等（初次使用推荐用 &lt;code>NAT&lt;/code> 模式较为简单，&lt;code>Bridge&lt;/code> 模式之后会提到如何配置）。&lt;/p>
&lt;p>&lt;figure style="flex-grow: 94; flex-basis: 227px">
&lt;a href="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/mems_and_cpus.png" data-size="540x569">&lt;img src="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/mems_and_cpus.png"
srcset="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/mems_and_cpus_hu3f94115c352a8224f9934a0cf4916735_29442_480x0_resize_box_2.png 480w, https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/mems_and_cpus_hu3f94115c352a8224f9934a0cf4916735_29442_1024x0_resize_box_2.png 1024w"
width="540"
height="569"
loading="lazy"
alt="虚拟机能用的内存和CPU核心数量设置">
&lt;/a>
&lt;figcaption>虚拟机能用的内存和CPU核心数量设置&lt;/figcaption>
&lt;/figure> &lt;figure style="flex-grow: 94; flex-basis: 227px">
&lt;a href="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/storage.png" data-size="540x569">&lt;img src="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/storage.png"
srcset="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/storage_hu2d0361517b02270d862594eb87061b93_34400_480x0_resize_box_2.png 480w, https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/storage_hu2d0361517b02270d862594eb87061b93_34400_1024x0_resize_box_2.png 1024w"
width="540"
height="569"
loading="lazy"
alt="存储空间设置">
&lt;/a>
&lt;figcaption>存储空间设置&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>如果你的宿主机支持的话，推荐使用 &lt;code>UEFI&lt;/code> 模式启动（由 &lt;code>extra/edk2-ovmf&lt;/code> 这个提供，中途安装的话要重启 &lt;code>libvirtd&lt;/code> 服务以生效）。&lt;/p>
&lt;p>&lt;figure style="flex-grow: 121; flex-basis: 290px">
&lt;a href="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/efi.png" data-size="1064x878">&lt;img src="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/efi.png"
srcset="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/efi_hu9f899bb67943b59a1cb22147594f3a07_107289_480x0_resize_box_2.png 480w, https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/efi_hu9f899bb67943b59a1cb22147594f3a07_107289_1024x0_resize_box_2.png 1024w"
width="1064"
height="878"
loading="lazy"
alt="EFI Firmware">
&lt;/a>
&lt;figcaption>EFI Firmware&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>调整镜像到启动优先级最高，最后启动工具栏上的 Begin Install 就可以安装了。
&lt;figure style="flex-grow: 121; flex-basis: 290px">
&lt;a href="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/boot_order.png" data-size="1064x878">&lt;img src="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/boot_order.png"
srcset="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/boot_order_hu0104e4f34f9204d4af86754a01e3407e_89865_480x0_resize_box_2.png 480w, https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/boot_order_hu0104e4f34f9204d4af86754a01e3407e_89865_1024x0_resize_box_2.png 1024w"
width="1064"
height="878"
loading="lazy"
alt="更改启动优先级">
&lt;/a>
&lt;figcaption>更改启动优先级&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h2 id="nixos-系统安装">NixOS 系统安装&lt;/h2>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://nixos.org/manual/nixos/stable/" target="_blank" rel="noopener"
>NixOS 使用手册&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h3 id="0-进入引导界面">0. 进入引导界面&lt;/h3>
&lt;p>&lt;figure style="flex-grow: 146; flex-basis: 351px">
&lt;a href="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/iso_grub.png" data-size="768x525">&lt;img src="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/iso_grub.png"
srcset="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/iso_grub_hu9ae0ec0bcf0062785606d81bd30497db_8765_480x0_resize_box_2.png 480w, https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/iso_grub_hu9ae0ec0bcf0062785606d81bd30497db_8765_1024x0_resize_box_2.png 1024w"
width="768"
height="525"
loading="lazy"
alt="ISO Grub">
&lt;/a>
&lt;figcaption>ISO Grub&lt;/figcaption>
&lt;/figure> &lt;figure style="flex-grow: 121; flex-basis: 290px">
&lt;a href="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/nix_begin.png" data-size="1064x878">&lt;img src="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/nix_begin.png"
srcset="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/nix_begin_huafbe3e8e1b72f2541b162b11814cfc21_22482_480x0_resize_box_2.png 480w, https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/nix_begin_huafbe3e8e1b72f2541b162b11814cfc21_22482_1024x0_resize_box_2.png 1024w"
width="1064"
height="878"
loading="lazy"
alt="NixOS 镜像启动">
&lt;/a>
&lt;figcaption>NixOS 镜像启动&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>由于我下载的是最小化镜像，所以并没有图形界面，如果下载的是带 &lt;code>Gnome&lt;/code> 或者 &lt;code>KDE&lt;/code> 的镜像的话应该可以看到界面了，稍后我也会以最小化镜像的方式开始安装图形界面。&lt;/p>
&lt;h3 id="1-磁盘分区">1. 磁盘分区&lt;/h3>
&lt;p>查看当前块设备状态，可以看到我们之前分配的盘 &lt;code>vda&lt;/code> 还未被挂载&lt;/p>
&lt;p>&lt;figure style="flex-grow: 295; flex-basis: 708px">
&lt;a href="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/lsblk.png" data-size="449x152">&lt;img src="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/lsblk.png"
srcset="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/lsblk_hu344fddbf0f37cde290abb7988bb0dc38_63573_480x0_resize_box_2.png 480w, https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/lsblk_hu344fddbf0f37cde290abb7988bb0dc38_63573_1024x0_resize_box_2.png 1024w"
width="449"
height="152"
loading="lazy"
alt="lsblk">
&lt;/a>
&lt;figcaption>lsblk&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>建议使用 GPT 分区表，按照可以按照图中对 &lt;code>boot&lt;/code>、&lt;code>swap&lt;/code>(可选)和 &lt;code>root&lt;/code> 分区进行创建，注意下方 &lt;code>Type&lt;/code> 选择对应的分区类型，&lt;code>Write&lt;/code> 写入后退出。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ sudo cfdisk /dev/vda
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;figure style="flex-grow: 135; flex-basis: 324px">
&lt;a href="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/cfdisk.png" data-size="1025x759">&lt;img src="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/cfdisk.png"
srcset="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/cfdisk_hu4fb32da0e060ded920f2416639508d64_12319_480x0_resize_box_2.png 480w, https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/cfdisk_hu4fb32da0e060ded920f2416639508d64_12319_1024x0_resize_box_2.png 1024w"
width="1025"
height="759"
loading="lazy"
alt="cfdisk">
&lt;/a>
&lt;figcaption>cfdisk&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>格式化分区，可以看到格式化后效果如下：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ sudo mkfs.fat -F32 /dev/vda1
$ sudo mkswap /dev/vda2
$ sudo swapon
$ sudo mkfs.xfs -L root /dev/vda3
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;figure style="flex-grow: 448; flex-basis: 1075px">
&lt;a href="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/lsblk_label.png" data-size="1058x236">&lt;img src="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/lsblk_label.png"
srcset="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/lsblk_label_hu760cf4292d45bf36294e06e878beb773_15356_480x0_resize_box_2.png 480w, https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/lsblk_label_hu760cf4292d45bf36294e06e878beb773_15356_1024x0_resize_box_2.png 1024w"
width="1058"
height="236"
loading="lazy"
alt="mkfs check">
&lt;/a>
&lt;figcaption>mkfs check&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h3 id="2-分区挂载">2. 分区挂载&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ sudo mount /dev/vda3 /mnt
$ sudo mkdir -p /mnt/boot
$ sudo mount /dev/vda1 /mnt/boot
&lt;/code>&lt;/pre>&lt;/div>&lt;p>挂载后可以检查是否挂载成功，不要重复挂载。&lt;/p>
&lt;p>&lt;figure style="flex-grow: 238; flex-basis: 572px">
&lt;a href="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/mount.png" data-size="563x236">&lt;img src="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/mount.png"
srcset="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/mount_hub30013d1b3472c1e3833db17bbd67cad_4425_480x0_resize_box_2.png 480w, https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/mount_hub30013d1b3472c1e3833db17bbd67cad_4425_1024x0_resize_box_2.png 1024w"
width="563"
height="236"
loading="lazy"
alt="挂载">
&lt;/a>
&lt;figcaption>挂载&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h3 id="3-系统配置">3. 系统配置&lt;/h3>
&lt;p>由命令生成默认的配置文件：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ sudo nixos-generate-config --root /mnt
$ sudo nano /mnt/etc/nixos/configuration.nix
&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以看到已经有了 &lt;code>systemd-boot&lt;/code> 作为 &lt;code>bootloader&lt;/code> 引导操作系统。其他一些基本配置，按照自己的需求取消注释并修改内容即可，注意创建用户 &lt;code>users.users.&amp;lt;YourUserName&amp;gt;&lt;/code> 及其对应的用户组，完成后 &lt;code>Ctrl + O&lt;/code> 保存。&lt;/p>
&lt;p>&lt;figure style="flex-grow: 132; flex-basis: 318px">
&lt;a href="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/config.png" data-size="1082x816">&lt;img src="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/config.png"
srcset="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/config_hucd270a1c19e44eafd2ee501c1b303a2d_19570_480x0_resize_box_2.png 480w, https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/config_hucd270a1c19e44eafd2ee501c1b303a2d_19570_1024x0_resize_box_2.png 1024w"
width="1082"
height="816"
loading="lazy"
alt="config">
&lt;/a>
&lt;figcaption>config&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>如果网络情况欠佳的话可以设置 &lt;code>http_proxy&lt;/code> 或者更换更新频道到国内镜像站：&lt;/p>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://mirrors.tuna.tsinghua.edu.cn/help/nix/" target="_blank" rel="noopener"
>TUNA Nix Help&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ sudo nix-channel --add https://mirrors.tuna.tsinghua.edu.cn/nix-channels/nixos-20.09 nixos
&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用 &lt;code>sudo nixos-install&lt;/code> 进行安装并设置 &lt;code>root&lt;/code> 密码，完成之后取消挂载并重启（记得更改启动项顺序到虚拟硬盘）。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ sudo nixos-install
...
setting root password...
Enter new UNIX password: ***
Retype new UNIX password: ***
$ sudo umount -r /mnt
$ reboot
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;figure style="flex-grow: 230; flex-basis: 553px">
&lt;a href="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/boot_from_dev.png" data-size="1135x492">&lt;img src="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/boot_from_dev.png"
srcset="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/boot_from_dev_hua4a363df8d1ea1c13471afa92cdc8452_56415_480x0_resize_box_2.png 480w, https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/boot_from_dev_hua4a363df8d1ea1c13471afa92cdc8452_56415_1024x0_resize_box_2.png 1024w"
width="1135"
height="492"
loading="lazy"
alt="调整启动顺序">
&lt;/a>
&lt;figcaption>调整启动顺序&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h2 id="nixos-系统配置和使用">NixOS 系统配置和使用&lt;/h2>
&lt;h3 id="0-检查引导状态">0. 检查引导状态&lt;/h3>
&lt;p>重启登陆后可以查看引导状态：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ sudo bootctl status
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;figure style="flex-grow: 119; flex-basis: 287px">
&lt;a href="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/boot_status.png" data-size="984x822">&lt;img src="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/boot_status.png"
srcset="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/boot_status_hufa72d0cbb1b5710b183f3687d93852e2_23367_480x0_resize_box_2.png 480w, https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/boot_status_hufa72d0cbb1b5710b183f3687d93852e2_23367_1024x0_resize_box_2.png 1024w"
width="984"
height="822"
loading="lazy"
alt="systemd-boot 状态">
&lt;/a>
&lt;figcaption>systemd-boot 状态&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h3 id="1-配置桌面环境">1. 配置桌面环境&lt;/h3>
&lt;p>&lt;code>/etc/nixos/configuration.conf&lt;/code> 配置文件参考如下&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-nix" data-lang="nix">&lt;span class="c1"># Edit this configuration file to define what should be installed on&lt;/span>
&lt;span class="c1"># your system. Help is available in the configuration.nix(5) man page&lt;/span>
&lt;span class="c1"># and in the NixOS manual (accessible by running ‘nixos-help’).&lt;/span>
&lt;span class="p">{&lt;/span> &lt;span class="n">config&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">pkgs&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="p">}:&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">imports&lt;/span> &lt;span class="o">=&lt;/span>
&lt;span class="p">[&lt;/span> &lt;span class="c1"># Include the results of the hardware scan.&lt;/span>
&lt;span class="sr">./hardware-configuration.nix&lt;/span>
&lt;span class="p">];&lt;/span>
&lt;span class="c1"># Use the systemd-boot EFI boot loader.&lt;/span>
&lt;span class="n">boot&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">loader&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">systemd-boot&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">enable&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">boot&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">loader&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">efi&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">canTouchEfiVariables&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">networking&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">hostName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;axionl&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1"># 设置 hostname.&lt;/span>
&lt;span class="c1"># networking.wireless.enable = true; # Enables wireless support via wpa_supplicant.&lt;/span>
&lt;span class="c1"># Set your time zone.&lt;/span>
&lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">timeZone&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Asia/Shanghai&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1"># 设置时区&lt;/span>
&lt;span class="c1"># The global useDHCP flag is deprecated, therefore explicitly set to false here.&lt;/span>
&lt;span class="c1"># Per-interface useDHCP will be mandatory in the future, so this generated config&lt;/span>
&lt;span class="c1"># replicates the default behavior.&lt;/span>
&lt;span class="n">networking&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">useDHCP&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">networking&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">interfaces&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">enp1s0&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">useDHCP&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">networking&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">networkmanager&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">enable&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">true&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1"># 启用 NetworkManager 替代默认的 DHCP&lt;/span>
&lt;span class="c1"># Configure network proxy if necessary&lt;/span>
&lt;span class="n">networking&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">proxy&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">default&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;http://192.168.122.1:8888&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1"># 设置一个外部代理（可选）&lt;/span>
&lt;span class="c1"># networking.proxy.noProxy = &amp;#34;127.0.0.1,localhost,internal.domain&amp;#34;;&lt;/span>
&lt;span class="c1"># Select internationalisation properties.&lt;/span>
&lt;span class="n">i18n&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">defaultLocale&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;en_US.UTF-8&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1"># 默认语言环境&lt;/span>
&lt;span class="c1"># console = {&lt;/span>
&lt;span class="c1"># font = &amp;#34;Lat2-Terminus16&amp;#34;;&lt;/span>
&lt;span class="c1"># keyMap = &amp;#34;us&amp;#34;;&lt;/span>
&lt;span class="c1"># };&lt;/span>
&lt;span class="c1"># Configure keymap in X11&lt;/span>
&lt;span class="n">services&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">xserver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">layout&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;us&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1"># 设置键盘布局&lt;/span>
&lt;span class="c1"># services.xserver.xkbOptions = &amp;#34;eurosign:e&amp;#34;;&lt;/span>
&lt;span class="c1"># Enable CUPS to print documents.&lt;/span>
&lt;span class="n">services&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">printing&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">enable&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">false&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1"># 启用打印服务（不需要可禁止）&lt;/span>
&lt;span class="c1"># Enable sound.&lt;/span>
&lt;span class="n">sound&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">enable&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">true&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1"># 允许声音&lt;/span>
&lt;span class="n">hardware&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pulseaudio&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">enable&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1"># Enable touchpad support (enabled default in most desktopManager).&lt;/span>
&lt;span class="n">services&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">xserver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">libinput&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">enable&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">true&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1"># 允许触摸板&lt;/span>
&lt;span class="c1"># Define a user account. Don&amp;#39;t forget to set a password with ‘passwd’.&lt;/span>
&lt;span class="c1"># 创建用户并添加到用户组&lt;/span>
&lt;span class="n">users&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">axionl&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">isNormalUser&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">extraGroups&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="s2">&amp;#34;wheel&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;networkmanager&amp;#34;&lt;/span> &lt;span class="p">];&lt;/span> &lt;span class="c1"># Enable ‘sudo’ for the user.&lt;/span>
&lt;span class="n">shell&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pkgs&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">fish&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1"># 指定终端（默认为 bash）&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="c1"># List packages installed in system profile. To search, run:&lt;/span>
&lt;span class="c1"># $ nix search wget&lt;/span>
&lt;span class="c1"># 在系统层面安装软件包&lt;/span>
&lt;span class="n">environment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">systemPackages&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">with&lt;/span> &lt;span class="n">pkgs&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="n">htop&lt;/span>
&lt;span class="n">neofetch&lt;/span>
&lt;span class="n">fish&lt;/span>
&lt;span class="n">spice-vdagent&lt;/span>
&lt;span class="n">virglrenderer&lt;/span>
&lt;span class="p">];&lt;/span>
&lt;span class="c1"># Some programs need SUID wrappers, can be configured further or are&lt;/span>
&lt;span class="c1"># started in user sessions.&lt;/span>
&lt;span class="c1"># programs.mtr.enable = true;&lt;/span>
&lt;span class="c1"># programs.gnupg.agent = {&lt;/span>
&lt;span class="c1"># enable = true;&lt;/span>
&lt;span class="c1"># enableSSHSupport = true;&lt;/span>
&lt;span class="c1"># };&lt;/span>
&lt;span class="c1"># List services that you want to enable:&lt;/span>
&lt;span class="c1"># Enable the OpenSSH daemon.&lt;/span>
&lt;span class="c1"># services.openssh.enable = true;&lt;/span>
&lt;span class="c1"># Open ports in the firewall.&lt;/span>
&lt;span class="c1"># networking.firewall.allowedTCPPorts = [ ... ];&lt;/span>
&lt;span class="c1"># networking.firewall.allowedUDPPorts = [ ... ];&lt;/span>
&lt;span class="c1"># Or disable the firewall altogether.&lt;/span>
&lt;span class="c1"># networking.firewall.enable = false;&lt;/span>
&lt;span class="c1"># This value determines the NixOS release from which the default&lt;/span>
&lt;span class="c1"># settings for stateful data, like file locations and database versions&lt;/span>
&lt;span class="c1"># on your system were taken. It‘s perfectly fine and recommended to leave&lt;/span>
&lt;span class="c1"># this value at the release version of the first install of this system.&lt;/span>
&lt;span class="c1"># Before changing this value read the documentation for this option&lt;/span>
&lt;span class="c1"># (e.g. man configuration.nix or on https://nixos.org/nixos/options.html).&lt;/span>
&lt;span class="n">system&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">stateVersion&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;20.09&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1"># Did you read the comment?&lt;/span>
&lt;span class="c1"># X Windows Server&lt;/span>
&lt;span class="c1"># 启动 X 显示服务&lt;/span>
&lt;span class="n">services&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">xserver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">enable&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1"># services.qemuGuest.enable = true;&lt;/span>
&lt;span class="c1"># services.spice-vdagentd.enable = true;&lt;/span>
&lt;span class="c1"># 允许 SDDM 作为窗口管理器&lt;/span>
&lt;span class="n">services&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">xserver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">displayManager&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sddm&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">enable&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1"># 安装 Plasma KDE 作为桌面环境&lt;/span>
&lt;span class="n">services&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">xserver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">desktopManager&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plasma5&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">enable&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1"># Packages&lt;/span>
&lt;span class="c1"># 允许第三方闭源软件包&lt;/span>
&lt;span class="n">nixpkgs&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">allowUnfree&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>修改配置文件之后需要使用命令重建并推荐重启生效：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ sudo nixos-rebuild switch --upgrade
&lt;/code>&lt;/pre>&lt;/div>&lt;p>日常使用的时候理论上可以多套配置（profile）兼容和切换，当配置过多的时候可用 &lt;code>nix-collect-garbage -d&lt;/code> 来完成，详见&lt;a class="link" href="https://nixos.org/guides/nix-pills/garbage-collector.html" target="_blank" rel="noopener"
>文档&lt;/a>。&lt;/p>
&lt;p>在用户层面安装软件包使用 &lt;code>nix&lt;/code> 包管理器进行搜索和安装：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ nix search &amp;lt;软件包名称&amp;gt; &lt;span class="c1"># 搜索&lt;/span>
$ nix-env -i &amp;lt;软件包名称&amp;gt; &lt;span class="c1"># 安装&lt;/span>
$ nix-env -qa &lt;span class="c1"># 列出可安装的包&lt;/span>
$ nix-env -e &amp;lt;软件包名称&amp;gt; &lt;span class="c1"># 卸载软件包&lt;/span>
$ nix-env --rollback &lt;span class="c1"># 软件包回滚&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>更多用法可见&lt;a class="link" href="https://nixos.org/manual/nix/stable/" target="_blank" rel="noopener"
>官方文档&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h3 id="2-截图">2. 截图&lt;/h3>
&lt;p>&lt;figure style="flex-grow: 175; flex-basis: 420px">
&lt;a href="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/final.png" data-size="1960x1120">&lt;img src="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/final.png"
srcset="https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/final_hu716cf65f9b220f6ee002cb4b4595423f_2261830_480x0_resize_box_2.png 480w, https://axionl.me/p/%E5%9C%A8-qemu/kvm-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85-nixos-%E5%8F%91%E8%A1%8C%E7%89%88/final_hu716cf65f9b220f6ee002cb4b4595423f_2261830_1024x0_resize_box_2.png 1024w"
width="1960"
height="1120"
loading="lazy"
alt="预览">
&lt;/a>
&lt;figcaption>预览&lt;/figcaption>
&lt;/figure>&lt;/p></description></item><item><title>Protocol Buffers 和 gRPC（一）</title><link>https://axionl.me/p/protocol-buffers-%E5%92%8C-grpc%E4%B8%80/</link><pubDate>Sun, 03 Jan 2021 23:46:51 +0800</pubDate><guid>https://axionl.me/p/protocol-buffers-%E5%92%8C-grpc%E4%B8%80/</guid><description>&lt;img src="https://axionl.me/p/protocol-buffers-%E5%92%8C-grpc%E4%B8%80/banner.jpg" alt="Featured image of post Protocol Buffers 和 gRPC（一）" />&lt;h2 id="前言">前言&lt;/h2>
&lt;blockquote>
&lt;p>官方网站&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://grpc.io" target="_blank" rel="noopener"
>gRPC&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://developers.google.com/protocol-buffers" target="_blank" rel="noopener"
>Protocol Buffers&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h3 id="通俗易懂的说明">通俗易懂的说明&lt;/h3>
&lt;p>&lt;figure style="flex-grow: 157; flex-basis: 379px">
&lt;a href="https://axionl.me/p/protocol-buffers-%E5%92%8C-grpc%E4%B8%80/introduction.png" data-size="916x580">&lt;img src="https://axionl.me/p/protocol-buffers-%E5%92%8C-grpc%E4%B8%80/introduction.png"
srcset="https://axionl.me/p/protocol-buffers-%E5%92%8C-grpc%E4%B8%80/introduction_hub0c6a23b7eac344035b836ecb5593f14_65920_480x0_resize_box_2.png 480w, https://axionl.me/p/protocol-buffers-%E5%92%8C-grpc%E4%B8%80/introduction_hub0c6a23b7eac344035b836ecb5593f14_65920_1024x0_resize_box_2.png 1024w"
width="916"
height="580"
loading="lazy"
alt="introduction">
&lt;/a>
&lt;figcaption>introduction&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>以宽泛的概念来说就是找到一种公共的中间体，以达到两者“交流”的目的。&lt;/p>
&lt;h3 id="有点复杂的介绍">有点复杂的介绍&lt;/h3>
&lt;p>&lt;a class="link" href="https://en.wikipedia.org/wiki/Remote_procedure_call" target="_blank" rel="noopener"
>RPC(Remote Procedure Call)&lt;/a> 远程过程调用，可简单理解为远程的程间通讯。gRPC 是 Google 所实现的一个开源框架，Protocol Buffers 是用于通信的数据载体格式，有着高压缩率（序列化后）、跨平台、多语言等优点。&lt;/p>
&lt;p>虽然定义上是远程通讯，但扩展到仅本地使用就成了一种形式上的程间通讯。gRPC 通过网络栈实现这一过程，而 Apache Thrift 则包含了网络、命名管道、内存共享等多种数据交换形式，留作以后介绍和对比。通过序列化工具 (Protocol Buffers) 在节省带宽和减少传输时间的基础上，又能够轻易还原回原本的结构数据，便于多语言开发，部分软件也以此作为其 API 暴露方式，如 v2ray 等。&lt;/p>
&lt;p>&lt;figure style="flex-grow: 218; flex-basis: 523px">
&lt;a href="https://axionl.me/p/protocol-buffers-%E5%92%8C-grpc%E4%B8%80/flow.png" data-size="1019x467">&lt;img src="https://axionl.me/p/protocol-buffers-%E5%92%8C-grpc%E4%B8%80/flow.png"
srcset="https://axionl.me/p/protocol-buffers-%E5%92%8C-grpc%E4%B8%80/flow_hu357817bfc71fa842687faeb034a27405_25579_480x0_resize_box_2.png 480w, https://axionl.me/p/protocol-buffers-%E5%92%8C-grpc%E4%B8%80/flow_hu357817bfc71fa842687faeb034a27405_25579_1024x0_resize_box_2.png 1024w"
width="1019"
height="467"
loading="lazy"
alt="流程示意图">
&lt;/a>
&lt;figcaption>流程示意图&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h3 id="一个简单的例子">一个简单的例子&lt;/h3>
&lt;p>以一个消息内容为空的协议为例子，仅用于确认发送和响应。对于 &lt;code>golang&lt;/code> 或者 &lt;code>java&lt;/code> 等语言来说 &lt;code>proto3&lt;/code> 支持以 &lt;code>option&lt;/code> 的方式产生适合其代码引入的包封装 (&lt;a class="link" href="https://developers.google.com/protocol-buffers/docs/tutorials" target="_blank" rel="noopener"
>详见&lt;/a>)。&lt;/p>
&lt;ul>
&lt;li>公共协议&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-proto" data-lang="proto">&lt;span class="n">syntax&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;proto3&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">option&lt;/span> &lt;span class="n">go_package&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;example.com/user/grpcGoExample&amp;#34;&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="kd">message&lt;/span> &lt;span class="nc">HelloMessage&lt;/span> &lt;span class="p">{}&lt;/span> &lt;span class="c1">// 公共消息体，未包含任何字段
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="cm">/* 通讯服务声明，类似于我们常说的接口 */&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="kd">service&lt;/span> &lt;span class="n">Greeter&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span> &lt;span class="k">rpc&lt;/span> &lt;span class="n">SayHello&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">HelloMessage&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">returns&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">HelloMessage&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>golang 客户端&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="o">...&lt;/span>
&lt;span class="nx">pb&lt;/span> &lt;span class="s">&amp;#34;example.com/user/grpcGoExample&amp;#34;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="c1">// 具体方法实现
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">g&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">Greeter&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">sayHello&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 生成上下文
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">cancel&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">WithTimeout&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Background&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="nx">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Second&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">defer&lt;/span> &lt;span class="nf">cancel&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">// 获取服务端响应，在执行这条指令后可以看到进入了服务端对应的方法
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">response&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">g&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">client&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">SayHello&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">pb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HelloMessage&lt;/span>&lt;span class="p">{})&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Fatalf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Failed to get the response: %v&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">response&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hello Server&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 本地临时创建一个不安全的链接(socks5)
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kd">const&lt;/span> &lt;span class="nx">Address&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;localhost:50051&amp;#34;&lt;/span>
&lt;span class="nx">conn&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">grpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Dial&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">Address&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">grpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">WithInsecure&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="nx">grpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">WithBlock&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Fatalf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Failed to connect: %v&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">defer&lt;/span> &lt;span class="nx">conn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Close&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">client&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">pb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewGreeterClient&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">conn&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">greeter&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">Greeter&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">client&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">client&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="nx">greeter&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">sayHello&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1">// 调用方法
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>服务端&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="o">...&lt;/span>
&lt;span class="nx">pb&lt;/span> &lt;span class="s">&amp;#34;example.com/user/grpcGoExample&amp;#34;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="kd">type&lt;/span> &lt;span class="nx">server&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">pb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">UnimplementedGreeterServer&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 方法具体实现
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">server&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">SayHello&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span> &lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">message&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">pb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HelloMessage&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">pb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HelloMessage&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 请求陷入该方法后输出字符串，表示服务器已经收到该指令
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hello Client!&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// 返回响应
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">pb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HelloMessage&lt;/span>&lt;span class="p">{},&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 监听一个本地端口
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">lis&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Listen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;tcp&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;0.0.0.0:50051&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Fatalf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;failed to listen: %v&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Listen on: %v...&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">Address&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 创建服务端
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">s&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">grpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewServer&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="nx">pb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">RegisterGreeterServer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">server&lt;/span>&lt;span class="p">{})&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Serve&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">lis&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Fatalf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;failed to serve: %v&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以看到，在基本不需要涉及底层网络开发和同步协定的情况下实现了两个程序之间的通讯，其关键在于服务端重写方法的实现和客户端上下文的获取。在后续的介绍中还会就具体操作过程作详细说明。&lt;/p>
&lt;h2 id="protocol-buffers-简要">Protocol Buffers 简要&lt;/h2>
&lt;h3 id="跨语言类型的桥梁">跨语言类型的桥梁&lt;/h3>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://developers.google.com/protocol-buffers" target="_blank" rel="noopener"
>Protocol Buffers&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>作为一种语言中立的协议，其在多种语言中都有对应的变量类型转换，需要特别注意是否在转换过程中出现精度丢失现象，或者并非预期类型的现象，比如 &lt;code>bytes&lt;/code> 对应到 &lt;code>C++&lt;/code> 的类型为 &lt;code>string&lt;/code>，需要自己适当转换。&lt;/p>
&lt;p>&lt;figure style="flex-grow: 110; flex-basis: 264px">
&lt;a href="https://axionl.me/p/protocol-buffers-%E5%92%8C-grpc%E4%B8%80/scalar.png" data-size="862x782">&lt;img src="https://axionl.me/p/protocol-buffers-%E5%92%8C-grpc%E4%B8%80/scalar.png"
srcset="https://axionl.me/p/protocol-buffers-%E5%92%8C-grpc%E4%B8%80/scalar_hua19fb8bf80b659dd6c089a3e0794ccd5_114023_480x0_resize_box_2.png 480w, https://axionl.me/p/protocol-buffers-%E5%92%8C-grpc%E4%B8%80/scalar_hua19fb8bf80b659dd6c089a3e0794ccd5_114023_1024x0_resize_box_2.png 1024w"
width="862"
height="782"
loading="lazy"
alt="变量类型对应表 (https://developers.google.com/protocol-buffers/docs/overview#scalar)">
&lt;/a>
&lt;figcaption>变量类型对应表 (&lt;a href="https://developers.google.com/protocol-buffers/docs/overview#scalar">https://developers.google.com/protocol-buffers/docs/overview#scalar&lt;/a>)&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>此外支持通过嵌套类型，实现结构体形式的信息的传输和还原。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-protobuf" data-lang="protobuf">&lt;span class="kd">message&lt;/span> &lt;span class="nc">PersonalInfo&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span> &lt;span class="kt">int32&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span> &lt;span class="kt">int32&lt;/span> &lt;span class="n">score&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span> &lt;span class="kd">enum&lt;/span> &lt;span class="n">Hobby&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span> &lt;span class="n">GAMES&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span> &lt;span class="n">MUSIC&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span> &lt;span class="p">}&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span> &lt;span class="n">Hobby&lt;/span> &lt;span class="n">hobby&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="kd">message&lt;/span> &lt;span class="nc">PersonalResponse&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="n">msg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="kd">message&lt;/span> &lt;span class="nc">ClassInfo&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span> &lt;span class="k">repeated&lt;/span> &lt;span class="n">PersonalInfo&lt;/span> &lt;span class="n">c_info&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="kd">service&lt;/span> &lt;span class="n">SearchInfo&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span> &lt;span class="k">rpc&lt;/span> &lt;span class="n">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stream&lt;/span> &lt;span class="n">PersonalInfo&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">returns&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">PersonalResponse&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>更多语法说明可以参考&lt;a class="link" href="https://developers.google.com/protocol-buffers/docs/proto3" target="_blank" rel="noopener"
>官方文档&lt;/a>。&lt;/p>
&lt;h3 id="生成库文件">生成库文件&lt;/h3>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://github.com/protocolbuffers/protobuf/releases/latest" target="_blank" rel="noopener"
>Protobuf Github Release 下载 (含 protoc)&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>生成所需要用到两个工具，一个是 &lt;code>protoc&lt;/code> 其本身，另一个是用于生成对应其他语言文件的插件，后者可能有些发行版已经将对应语言的插件打包到了 &lt;code>grpc&lt;/code> 包内一起，视具体情况而定，比如 &lt;code>protoc-gen-go-grpc&lt;/code> 正好没有，那就找到&lt;a class="link" href="https://github.com/grpc/grpc-go" target="_blank" rel="noopener"
>上游项目&lt;/a>自己安装一个并添加到环境变量中（方便输入）。&lt;/p>
&lt;ul>
&lt;li>命令行方式&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fish" data-lang="fish">&lt;span class="nv">$ &lt;/span>protoc &lt;span class="na">--plugin&lt;/span>&lt;span class="o">=&lt;/span>protoc&lt;span class="na">-gen-go-grpc&lt;/span> &lt;span class="na">--go_out&lt;/span>&lt;span class="o">=&lt;/span>. &lt;span class="na">--go-grpc_out&lt;/span>&lt;span class="o">=&lt;/span>. &lt;span class="na">-I&lt;/span>&lt;span class="o">=&lt;/span>. &lt;span class="nf">info&lt;/span>.proto
&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后生成了 &lt;code>info.pb.go&lt;/code> 和 &lt;code>info_grpc.pb.go&lt;/code> 两个文件，大体上看前者管定义，后者管实现，属于同一个包。其他语言主要是将二进制插件和输出参数替换成对应语言的。&lt;/p>
&lt;ul>
&lt;li>cmake 包办&lt;/li>
&lt;/ul>
&lt;p>可以参考如下两个 &lt;code>.cmake&lt;/code> 文件，自己在 &lt;code>CMakeLists.txt&lt;/code> 中设置变量名称。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cmake" data-lang="cmake">&lt;span class="c">## protobuf.cmake
&lt;/span>&lt;span class="c"># Find Protobuf
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="nb">find_package&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">Protobuf&lt;/span> &lt;span class="s">REQUIRED&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="c"># Find Generator Executable
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="nb">find_program&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">PROTOBUF_PROTOC_EXECUTABLE&lt;/span> &lt;span class="s">protoc&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="c"># Set Proto Name
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="nb">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">API_PROTO_NAME&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;YourProtoName&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="c"># Set Libraries
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="nb">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">PROTOBUF_LIBPROTOBUF_LIB&lt;/span> &lt;span class="s">protobuf::libprotobuf&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="c"># Set Proto Path
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="nb">get_filename_component&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">API_PROTO_PATH&lt;/span> &lt;span class="s2">&amp;#34;protofile&amp;#34;&lt;/span> &lt;span class="s">ABSOLUTE&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="c"># File Proto File
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="nb">get_filename_component&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">API_PROTO&lt;/span> &lt;span class="s2">&amp;#34;${API_PROTO_PATH}/${API_PROTO_NAME}.proto&amp;#34;&lt;/span> &lt;span class="s">ABSOLUTE&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="c"># Generated Sources
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="nb">protobuf_generate_cpp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">API_PROTO_SRCS&lt;/span> &lt;span class="s">API_PROTO_HDRS&lt;/span> &lt;span class="s2">&amp;#34;${API_PROTO}&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cmake" data-lang="cmake">&lt;span class="c">## grpc.cmake
&lt;/span>&lt;span class="c"># Find gRPC Package
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="nb">find_package&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">gRPC&lt;/span> &lt;span class="s">CONFIG&lt;/span> &lt;span class="s">REQUIRED&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="c"># Find Generator Executable Plugin
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="nb">find_program&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">GRPC_CC_PLUGIN_EXECUTABLE&lt;/span> &lt;span class="s">grpc_cpp_plugin&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="c"># Find PkgConfig
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="nb">find_package&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">PkgConfig&lt;/span> &lt;span class="s">REQUIRED&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="c"># Check Modules
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="nb">pkg_check_modules&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">GRPC&lt;/span> &lt;span class="s">REQUIRED&lt;/span> &lt;span class="s">grpc++&lt;/span> &lt;span class="s">grpc&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="c"># Set Source Files
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="nb">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">API_GRPC_SRCS&lt;/span> &lt;span class="o">${&lt;/span>&lt;span class="nv">CMAKE_CURRENT_BINARY_DIR&lt;/span>&lt;span class="o">}&lt;/span>&lt;span class="s">/&lt;/span>&lt;span class="o">${&lt;/span>&lt;span class="nv">API_PROTO_NAME&lt;/span>&lt;span class="o">}&lt;/span>&lt;span class="s">.grpc.pb.cc&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="nb">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">API_GRPC_HDRS&lt;/span> &lt;span class="o">${&lt;/span>&lt;span class="nv">CMAKE_CURRENT_BINARY_DIR&lt;/span>&lt;span class="o">}&lt;/span>&lt;span class="s">/&lt;/span>&lt;span class="o">${&lt;/span>&lt;span class="nv">API_PROTO_NAME&lt;/span>&lt;span class="o">}&lt;/span>&lt;span class="s">.grpc.pb.h&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="c"># Set Libraries
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="nb">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">GRPC_GRPCPP_LIB&lt;/span> &lt;span class="s">gRPC::grpc++&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="nb">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">GRPC_REFLECTION_LIB&lt;/span> &lt;span class="s">gRPC::grpc++_reflection&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="c"># Generate gRPC Sources
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="nb">add_custom_command&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="s">OUTPUT&lt;/span> &lt;span class="s2">&amp;#34;${API_GRPC_SRCS}&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;${API_GRPC_HDRS}&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;${API_PROTO_SRCS}&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;${API_PROTO_HDRS}&amp;#34;&lt;/span>
&lt;span class="s">COMMAND&lt;/span> &lt;span class="o">${&lt;/span>&lt;span class="nv">PROTOBUF_PROTOC_EXECUTABLE&lt;/span>&lt;span class="o">}&lt;/span>
&lt;span class="s">ARGS&lt;/span> &lt;span class="s">--grpc_out=&lt;/span>&lt;span class="o">${&lt;/span>&lt;span class="nv">CMAKE_CURRENT_BINARY_DIR&lt;/span>&lt;span class="o">}&lt;/span>
&lt;span class="s">--cpp_out=&lt;/span>&lt;span class="o">${&lt;/span>&lt;span class="nv">CMAKE_CURRENT_BINARY_DIR&lt;/span>&lt;span class="o">}&lt;/span>
&lt;span class="s">-I=&lt;/span>&lt;span class="s2">&amp;#34;${API_PROTO_PATH}&amp;#34;&lt;/span>
&lt;span class="s">--plugin=protoc-gen-grpc=&lt;/span>&lt;span class="s2">&amp;#34;${GRPC_CC_PLUGIN_EXECUTABLE}&amp;#34;&lt;/span>
&lt;span class="s2">&amp;#34;${API_PROTO}&amp;#34;&lt;/span>
&lt;span class="s">DEPENDS&lt;/span> &lt;span class="s2">&amp;#34;${API_PROTO}&amp;#34;&lt;/span>
&lt;span class="p">)&lt;/span>&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="一个综合的案例">一个综合的案例&lt;/h3>
&lt;p>&lt;a class="link" href="https://github.com/v2fly/v2ray-core/blob/master/config.proto" target="_blank" rel="noopener"
>v2ray config.proto&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-protobuf" data-lang="protobuf">&lt;span class="n">syntax&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;proto3&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="kn">package&lt;/span> &lt;span class="nn">v2ray&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">option&lt;/span> &lt;span class="n">csharp_namespace&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;V2Ray.Core&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">option&lt;/span> &lt;span class="n">go_package&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;v2ray.com/core&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">option&lt;/span> &lt;span class="n">java_package&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;com.v2ray.core&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">option&lt;/span> &lt;span class="n">java_multiple_files&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">import&lt;/span> &lt;span class="s">&amp;#34;common/serial/typed_message.proto&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">import&lt;/span> &lt;span class="s">&amp;#34;transport/config.proto&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以看到首先引入了两个子 &lt;code>proto&lt;/code> 文件，其中包含一些自己项目具体定义的消息类型，以 &lt;code>typed_message.proto&lt;/code> 为例子，其中只包含了两种类型的两个字段。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-protobuf" data-lang="protobuf">&lt;span class="kd">message&lt;/span> &lt;span class="nc">TypedMessage&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span> &lt;span class="c1">// The name of the message type, retrieved from protobuf API.
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="n">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span> &lt;span class="c1">// Serialized proto message.
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kt">bytes&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>最终通过层层嵌套构成了一个综合的信息结构体，一并打包发送。&lt;/p>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://wallhaven.cc/w/6k293l" target="_blank" rel="noopener"
>Banner Artwork&lt;/a>&lt;/p>
&lt;/blockquote></description></item><item><title>[归档] SmartDNS 一个智能分流的 DNS 服务</title><link>https://axionl.me/p/%E5%BD%92%E6%A1%A3-smartdns-%E4%B8%80%E4%B8%AA%E6%99%BA%E8%83%BD%E5%88%86%E6%B5%81%E7%9A%84-dns-%E6%9C%8D%E5%8A%A1/</link><pubDate>Sat, 02 Jan 2021 09:41:20 +0800</pubDate><guid>https://axionl.me/p/%E5%BD%92%E6%A1%A3-smartdns-%E4%B8%80%E4%B8%AA%E6%99%BA%E8%83%BD%E5%88%86%E6%B5%81%E7%9A%84-dns-%E6%9C%8D%E5%8A%A1/</guid><description>&lt;img src="https://axionl.me/p/%E5%BD%92%E6%A1%A3-smartdns-%E4%B8%80%E4%B8%AA%E6%99%BA%E8%83%BD%E5%88%86%E6%B5%81%E7%9A%84-dns-%E6%9C%8D%E5%8A%A1/banner.jpg" alt="Featured image of post [归档] SmartDNS 一个智能分流的 DNS 服务" />&lt;h2 id="介绍">介绍&lt;/h2>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://github.com/pymumu/smartdns" target="_blank" rel="noopener"
>项目地址&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h3 id="dns">DNS&lt;/h3>
&lt;p>域名系统（英语：Domain Name System，缩写：DNS）是互联网的一项服务。它作为将域名和 IP 地址相互映射的一个分布式数据库，能够使人更方便地访问互联网。通常情况下本地的解析请求会发送到离你最近的 DNS 服务器，它可能是你的无线路由器、宿舍楼梯下的服务器或者运营商的地区性服务器等，但由于各种原因导致解析效果不理想，延迟高等问题，这时可以考虑换一个网络质量好的域名解析服务，错峰出行，减少拥堵。&lt;/p>
&lt;h3 id="smartdns">SmartDNS&lt;/h3>
&lt;p>SmartDNS 集成了多种出栈请求协议，包括常用的 &lt;code>UDP&lt;/code> 和较为现代的 &lt;code>DNS-Over-Https&lt;/code> 等，能够在给定的规则列表中挑选出一个延迟最低的域名解析服务，并向其发送请求。同时其内部也提供 DNS 缓存，如果缓存能够命中则直接从本地缓存中返回对应 IP 地址，如未能查找到则继续向上级 DNS 服务传播请求。&lt;/p>
&lt;p>&lt;img src="https://github.com/pymumu/smartdns/raw/master/doc/architecture.png" alt="structure" />&lt;/p>
&lt;h2 id="配置">配置&lt;/h2>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://github.com/pymumu/smartdns/blob/master/etc/smartdns/smartdns.conf" target="_blank" rel="noopener"
>默认配置文件&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>推荐项目：&lt;a class="link" href="https://github.com/felixonmars/dnsmasq-china-list" target="_blank" rel="noopener"
>dnsmasq-china-list&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>作者肥猫在其项目中提供了几个较为常用的匹配规则列表，对于非 Arch Linux 用户而言可以把项目克隆到本地然后构建对应的配置文件，而 Arch 用户可以从 &lt;a class="link" href="https://www.archlinuxcn.org/archlinux-cn-repo-and-mirror/" target="_blank" rel="noopener"
>CN 源&lt;/a> 里安装 &lt;code>smartdns-china-list-git&lt;/code> 以获取自动更新。&lt;/p>
&lt;p>生成对应的配置文件操作如下，&lt;a class="link" href="https://github.com/archlinuxcn/repo/blob/c2fe2e155a35da76a879b6a9d0fe21975413bce2/archlinuxcn/dnsmasq-china-list-git/PKGBUILD#L22" target="_blank" rel="noopener"
>具体参考&lt;/a>，可见其生成形式为 &lt;code>nameserver /&amp;lt;域名&amp;gt;/&amp;lt;组名&amp;gt;&lt;/code>，后面的组名就是对应我们后来需要的匹配规则而制定的。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fish" data-lang="fish">&lt;span class="nv">$ &lt;/span>cd dnsmasq&lt;span class="na">-china-list&lt;/span>
&lt;span class="nv">$ &lt;/span>make smartdns &lt;span class="nv">SERVER&lt;/span>&lt;span class="o">=&lt;/span>china
&lt;/code>&lt;/pre>&lt;/div>&lt;p>默认的配置文件中有很多不常用的项目，作为自己的配置文件一般精简到自己需要的功能配置即可。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="w"> &lt;/span>&lt;span class="c"># （可选）引入额外的规则列表，用绝对路径&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="l">conf-file /etc/smartdns/accelerated-domains.china.smartdns.conf&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="l">conf-file /etc/smartdns/apple.china.smartdns.conf&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="l">conf-file /etc/smartdns/google.china.smartdns.conf&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c"># 本地监听端口&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="l">bind [::]:53&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c"># 缓存大小&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="l">cache-size 4096&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c"># 重启时读取之前的缓存&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="l">cache-persist yes&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c"># 缓存文件存放位置&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="l">cache-file /var/cache/smartdns.cache&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c"># 传统 UDP 协议（以阿里 DNS 为例）&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="l">server 223.5.5.5&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c"># DNS Over TLS （以 CloudFlare DNS 为例）&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="l">server-tls 1.0.0.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c"># DNS Over Https (以烧饼 DNS 为例)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="l">server-https https://doh.dns.sb/dns-query -group china -group example&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>更多 DNS 服务地址：&lt;a class="link" href="https://dnscrypt.info/public-servers/" target="_blank" rel="noopener"
>dnscrypt.info&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>如果有多个分组需求，可以自定义规则配置文件，服务配置后面再添加 &lt;code>-group [组名]&lt;/code>。&lt;/p>
&lt;p>被 &lt;code>-exclude-default-group&lt;/code> 标记为排除在默认组之内的服务需至少在一个组才可能被访问到。&lt;/p>
&lt;h2 id="启动">启动&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fish" data-lang="fish">&lt;span class="c"># smartdns -c smartdns.conf
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">or&lt;/span>
&lt;span class="c"># systemctl enable --now smartdns.service
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>默认在后台运行，推荐使用自带的 &lt;a class="link" href="https://github.com/pymumu/smartdns/blob/master/systemd/smartdns.service.in" target="_blank" rel="noopener"
>&lt;code>systemd service&lt;/code>&lt;/a> 来进行管理，如果 &lt;code>/ect/resolv.conf&lt;/code> 没有被更改成监听本地的话可以检查一下文件是否有特殊标志位(&lt;code>lsattr&lt;/code>)，手动修改即可(&lt;code>chattr&lt;/code> )。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fish" data-lang="fish">&lt;span class="nv">$ &lt;/span>cat /etc/resolv.conf
&lt;span class="c"># DNS managed by SmartDNS
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="nf">nameserver&lt;/span> &lt;span class="m">127&lt;/span>.&lt;span class="m">0&lt;/span>.&lt;span class="m">0&lt;/span>.&lt;span class="m">1&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>&lt;a class="link" href="https://wallhaven.cc/w/0qx3x7" target="_blank" rel="noopener"
>Banner Artwork&lt;/a>&lt;/p>
&lt;/blockquote></description></item><item><title>[新手篇] 如何写一个简单的上膛机器人</title><link>https://axionl.me/p/%E6%96%B0%E6%89%8B%E7%AF%87-%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E4%B8%8A%E8%86%9B%E6%9C%BA%E5%99%A8%E4%BA%BA/</link><pubDate>Thu, 31 Dec 2020 17:26:38 +0800</pubDate><guid>https://axionl.me/p/%E6%96%B0%E6%89%8B%E7%AF%87-%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E4%B8%8A%E8%86%9B%E6%9C%BA%E5%99%A8%E4%BA%BA/</guid><description>&lt;img src="https://axionl.me/p/%E6%96%B0%E6%89%8B%E7%AF%87-%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E4%B8%8A%E8%86%9B%E6%9C%BA%E5%99%A8%E4%BA%BA/banner.png" alt="Featured image of post [新手篇] 如何写一个简单的上膛机器人" />&lt;h2 id="介绍">介绍&lt;/h2>
&lt;p>一个检测关键词并自动回复表情包的 &lt;code>Telegram&lt;/code> 机器人。&lt;/p>
&lt;h2 id="开发">开发&lt;/h2>
&lt;h3 id="注册一个机器人">注册一个机器人&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>访问 Telegram 的官方注册机器人 &lt;a class="link" href="https://t.me/BotFather" target="_blank" rel="noopener"
>@BotFather&lt;/a> 。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用 &lt;code>/newbot&lt;/code> 命令创建一个新的机器人。它会询问你所要创建机器人的名字 (nickname) 和用户名 (username, 以&lt;code>_bot&lt;/code>结尾)，注册成功后会将机器人的 &lt;code>TOKEN&lt;/code> 返回给你，而这个 &lt;code>TOKEN&lt;/code> 用于告知服务器这个机器人就是（&lt;del>大明湖畔那个夏雨荷&lt;/del>）对应注册的机器人。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;figure style="flex-grow: 132; flex-basis: 317px">
&lt;a href="https://axionl.me/p/%E6%96%B0%E6%89%8B%E7%AF%87-%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E4%B8%8A%E8%86%9B%E6%9C%BA%E5%99%A8%E4%BA%BA/botfather.png" data-size="661x500">&lt;img src="https://axionl.me/p/%E6%96%B0%E6%89%8B%E7%AF%87-%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E4%B8%8A%E8%86%9B%E6%9C%BA%E5%99%A8%E4%BA%BA/botfather.png"
srcset="https://axionl.me/p/%E6%96%B0%E6%89%8B%E7%AF%87-%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E4%B8%8A%E8%86%9B%E6%9C%BA%E5%99%A8%E4%BA%BA/botfather_hucf6421b70a9b3e8ebac9202e8f165b34_180718_480x0_resize_box_2.png 480w, https://axionl.me/p/%E6%96%B0%E6%89%8B%E7%AF%87-%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E4%B8%8A%E8%86%9B%E6%9C%BA%E5%99%A8%E4%BA%BA/botfather_hucf6421b70a9b3e8ebac9202e8f165b34_180718_1024x0_resize_box_2.png 1024w"
width="661"
height="500"
loading="lazy"
alt="botfather">
&lt;/a>
&lt;figcaption>botfather&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">...
Use this token to access the HTTP API:
&lt;span class="sb">`&amp;lt;1145141919810:TheWholeSentenceIsToken&amp;gt;`&lt;/span>
Keep your token secure and store it safely, ...
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="安装-python-环境">安装 Python 环境&lt;/h3>
&lt;blockquote>
&lt;p>官方网站: &lt;a href="https://www.python.org/downloads">https://www.python.org/downloads&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>对于绝大多数 Linux 发行版来说从其自己的包管理器中安装 &lt;code>Python&lt;/code> 即可（&lt;del>2021 年了应该都默认 Python3?)&lt;/del>&lt;/p>
&lt;p>Windows 则 Python 官方提供了安装器，记得把 &lt;code>Python&lt;/code> 加到环境变量 (PATH) 的框给勾选上。&lt;/p>
&lt;p>为了避免开发环境不干净对后续开发和使用系统造成影响，建议创建一个用于该机器人项目的&lt;a class="link" href="https://docs.python.org/zh-cn/3/tutorial/venv.html" target="_blank" rel="noopener"
>虚拟环境(virtual environment)&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fish" data-lang="fish">&lt;span class="nv">$ &lt;/span>python &lt;span class="na">-m&lt;/span> venv .venv // 创建了一个名为 .venv 的隐藏文件夹
&lt;/code>&lt;/pre>&lt;/div>&lt;p>对于国内使用 PyPi 源速度不是很给力的情况，可以考虑替换镜像源为&lt;a class="link" href="https://mirrors.tuna.tsinghua.edu.cn/help/pypi/" target="_blank" rel="noopener"
>清华源&lt;/a>&lt;/p>
&lt;p>也可以写入默认配置文件 &lt;code>~/.config/pip/pip.conf&lt;/code>（如果没有则&lt;a class="link" href="https://pip.pypa.io/en/stable/user_guide/#config-file" target="_blank" rel="noopener"
>创建&lt;/a>）&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="k">[global]&lt;/span>
&lt;span class="na">index-url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">https://pypi.tuna.tsinghua.edu.cn/simple&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以查看设置是否生效&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fish" data-lang="fish">&lt;span class="nv">$ &lt;/span>pip config list
&lt;span class="nf">global&lt;/span>.index&lt;span class="na">-url&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;https://pypi.tuna.tsinghua.edu.cn/simple&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建虚拟环境后，您可以激活它，进入项目所在目录。&lt;/p>
&lt;ul>
&lt;li>在 Windows 上，运行:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cmd" data-lang="cmd">tutorial-env\Scripts\activate.bat
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>在 Unix 或 MacOS 上，运行:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ &lt;span class="nb">source&lt;/span> tutorial-env/bin/activate
&lt;/code>&lt;/pre>&lt;/div>&lt;p>对于 &lt;code>csh&lt;/code> 和 &lt;code>fish shell&lt;/code> 分别对应名为 &lt;code>activate.csh&lt;/code> 和 &lt;code>activate.fish&lt;/code> 的脚本&lt;/p>
&lt;h3 id="安装软件包依赖">安装软件包依赖&lt;/h3>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://github.com/python-telegram-bot/python-telegram-bot" target="_blank" rel="noopener"
>python telegram bot 项目地址&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fish" data-lang="fish">&lt;span class="nv">$ &lt;/span>pip install python&lt;span class="na">-telegram-bot&lt;/span> &lt;span class="na">--upgrade&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>也可以将依赖导出到文件，便于开发迁移&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fish" data-lang="fish">&lt;span class="nv">$ &lt;/span>pip freeze &lt;span class="o">&amp;gt;&lt;/span> requirements.txt
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="coding-time">Coding Time&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">def&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">():&lt;/span>
&lt;span class="c1"># 从环境变量中读取 TOKEN 减少硬编码可能带来的泄漏风险&lt;/span>
&lt;span class="c1"># 如果只是本地测试的话可以直接把 TOKEN 粘贴到程序中&lt;/span>
&lt;span class="n">TOKEN&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getenv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;TELEGRAM_BOT_TOKEN&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># Updater 是 Dispatcher 的实现，用于机器人数据交互的前端，&lt;/span>
&lt;span class="c1"># 负责更新消息队列并交付给其他调度程序&lt;/span>
&lt;span class="n">updater&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Updater&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">token&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">TOKEN&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">use_context&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">dispatcher&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">updater&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dispatcher&lt;/span>
&lt;span class="c1"># 开始拉取信息&lt;/span>
&lt;span class="n">updater&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">start_polling&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1"># 响应终止信号 Ctrl+C&lt;/span>
&lt;span class="n">updater&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">idle&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>上述几行代码构成了整个机器人的基本框架，包含了机器人身份认证和开启机器人服务等。我们还需要向该框架内注册具体的方法，以实现所需功能。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">def&lt;/span> &lt;span class="nf">start&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">update&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Update&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">CallbackContext&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;Send a message when the command /start is issued.&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="n">reply_text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;你好～&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="n">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">update&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">from_user&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">username&lt;/span> &lt;span class="ow">is&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">reply_text&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;您的用户名是: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="n">reply_text&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;ID: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="n">update&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">reply_text&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">reply_text&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">help_command&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">update&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Update&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">CallbackContext&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;Send a message when the command /help is issued.&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="n">update&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">reply_text&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;这里是帮助命令&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">echo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">update&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Update&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">CallbackContext&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;Echo the user message.&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="n">update&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">reply_text&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">update&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">():&lt;/span>
&lt;span class="n">token&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getenv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;TELEGRAM_BOT_TOKEN&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">updater&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Updater&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">token&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">token&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">use_context&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">dispatcher&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">updater&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dispatcher&lt;/span>
&lt;span class="n">dispatcher&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_handler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CommandHandler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;start&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">start_command&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">dispatcher&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_handler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CommandHandler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;help&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">help_command&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">dispatcher&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_handler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MessageHandler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Filters&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">text&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="o">~&lt;/span>&lt;span class="n">Filters&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">command&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">echo&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">updater&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">start_polling&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">updater&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">idle&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>从 &lt;code>Update&lt;/code> 中可以拿到消息的类型、具体内容、发送者等关键信息，从 &lt;code>CallbackContext&lt;/code> 中可以获取机器人本身的一些信息等。在使用 &lt;code>\&lt;/code> 开头的对应命令后就能进入到对应的方法，也可以对此进行类封装。&lt;/p>
&lt;p>注意到除了 &lt;code>CommandHandler&lt;/code> 之外还有其他类型的句柄如常规消息类的 &lt;code>MessageHandler&lt;/code>、用于行内输入的的 &lt;code>InlineQueryHandler&lt;/code> 等，请详见&lt;a class="link" href="https://python-telegram-bot.readthedocs.io/en/stable/telegram.html" target="_blank" rel="noopener"
>上游 API 文档&lt;/a>。&lt;/p>
&lt;p>回到需求，我们需要的检测关键词部分也是从 &lt;code>Update&lt;/code> 中来，用关键词列表简单演示，当消息中包含关键词的时候发送一个表情，或者其他类型的回复&lt;a class="link" href="https://python-telegram-bot.readthedocs.io/en/stable/telegram.message.html?highlight=Message" target="_blank" rel="noopener"
>详见 Message 类文档&lt;/a>。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="kn">from&lt;/span> &lt;span class="nn">telegram&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Update&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Sticker&lt;/span>
&lt;span class="c1"># 临时创建一个表情量&lt;/span>
&lt;span class="n">sticker&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Sticker&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file_id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;CAACAgUAAxkBAAIMOV_jA7I0IAABMbqNVNGkJWZNiDRT6QACiwIAArL6ew6tFsY1eQy9Lx4E&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">file_unique_id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;AgADiwIAArL6ew4&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">480&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">height&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">512&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">is_animated&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">False&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">echo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">update&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Update&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">CallbackContext&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">keys_list&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;上膛&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;车主&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;特斯拉&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">item&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">keys_list&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">item&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">update&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">msg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">update&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">message&lt;/span>
&lt;span class="n">msg&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">reply_sticker&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sticker&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;figure style="flex-grow: 209; flex-basis: 503px">
&lt;a href="https://axionl.me/p/%E6%96%B0%E6%89%8B%E7%AF%87-%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E4%B8%8A%E8%86%9B%E6%9C%BA%E5%99%A8%E4%BA%BA/echo_preview.png" data-size="596x284">&lt;img src="https://axionl.me/p/%E6%96%B0%E6%89%8B%E7%AF%87-%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E4%B8%8A%E8%86%9B%E6%9C%BA%E5%99%A8%E4%BA%BA/echo_preview.png"
srcset="https://axionl.me/p/%E6%96%B0%E6%89%8B%E7%AF%87-%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E4%B8%8A%E8%86%9B%E6%9C%BA%E5%99%A8%E4%BA%BA/echo_preview_hu13c889a0dde82791a75b695a30732db5_121401_480x0_resize_box_2.png 480w, https://axionl.me/p/%E6%96%B0%E6%89%8B%E7%AF%87-%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E4%B8%8A%E8%86%9B%E6%9C%BA%E5%99%A8%E4%BA%BA/echo_preview_hu13c889a0dde82791a75b695a30732db5_121401_1024x0_resize_box_2.png 1024w"
width="596"
height="284"
loading="lazy"
alt="echo">
&lt;/a>
&lt;figcaption>echo&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>至此初步效果已经达成，剩下要解决的两个疑问就是：&lt;/p>
&lt;ul>
&lt;li>Sticker 的信息是怎么来的？&lt;/li>
&lt;li>如何回复指定消息&lt;/li>
&lt;/ul>
&lt;h4 id="sticker-信息">Sticker 信息&lt;/h4>
&lt;p>可以添加一个专用于获取表情包信息的句柄&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">def&lt;/span> &lt;span class="nf">get_sticker&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">update&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Update&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">CallbackContext&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">update&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sticker&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">():&lt;/span>
&lt;span class="o">...&lt;/span>
&lt;span class="n">dispatcher&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_handler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MessageHandler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Filters&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sticker&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="o">~&lt;/span>&lt;span class="n">Filters&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">command&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">get_sticker&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="o">...&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>为了便于理解这里在服务端后台直接输出表情包信息作为日志，对于一些要动态添加表情包和对应关键字的需求来说，一个轻便的可持久化数据才是更好的选择。创建 Sticker 实例的时候注意不要遗漏必要的传入参数。&lt;/p>
&lt;p>&lt;figure style="flex-grow: 736; flex-basis: 1768px">
&lt;a href="https://axionl.me/p/%E6%96%B0%E6%89%8B%E7%AF%87-%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E4%B8%8A%E8%86%9B%E6%9C%BA%E5%99%A8%E4%BA%BA/sticker_info.png" data-size="862x117">&lt;img src="https://axionl.me/p/%E6%96%B0%E6%89%8B%E7%AF%87-%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E4%B8%8A%E8%86%9B%E6%9C%BA%E5%99%A8%E4%BA%BA/sticker_info.png"
srcset="https://axionl.me/p/%E6%96%B0%E6%89%8B%E7%AF%87-%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E4%B8%8A%E8%86%9B%E6%9C%BA%E5%99%A8%E4%BA%BA/sticker_info_hu4c462ca90775e67664e71ad2a3337f27_61412_480x0_resize_box_2.png 480w, https://axionl.me/p/%E6%96%B0%E6%89%8B%E7%AF%87-%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E4%B8%8A%E8%86%9B%E6%9C%BA%E5%99%A8%E4%BA%BA/sticker_info_hu4c462ca90775e67664e71ad2a3337f27_61412_1024x0_resize_box_2.png 1024w"
width="862"
height="117"
loading="lazy"
alt="sticker_info">
&lt;/a>
&lt;figcaption>sticker_info&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h4 id="如何回复指定的消息">如何回复指定的消息&lt;/h4>
&lt;p>简单来说这就是一个套娃过程，从包含关键字消息的 &lt;code>reply_to_message&lt;/code> 成员可以判断并拿到上一条回复的消息，回复拿到的上一条消息即可，从而实现精准打击（x&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python"> &lt;span class="o">...&lt;/span>
&lt;span class="n">msg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">update&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">reply_to_message&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">msg&lt;/span> &lt;span class="ow">is&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">msg&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">reply_sticker&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sticker&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="o">...&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;figure style="flex-grow: 155; flex-basis: 373px">
&lt;a href="https://axionl.me/p/%E6%96%B0%E6%89%8B%E7%AF%87-%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E4%B8%8A%E8%86%9B%E6%9C%BA%E5%99%A8%E4%BA%BA/reply.png" data-size="666x428">&lt;img src="https://axionl.me/p/%E6%96%B0%E6%89%8B%E7%AF%87-%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E4%B8%8A%E8%86%9B%E6%9C%BA%E5%99%A8%E4%BA%BA/reply.png"
srcset="https://axionl.me/p/%E6%96%B0%E6%89%8B%E7%AF%87-%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E4%B8%8A%E8%86%9B%E6%9C%BA%E5%99%A8%E4%BA%BA/reply_hu6c3252242f1a9b7b61af37965102af7d_192120_480x0_resize_box_2.png 480w, https://axionl.me/p/%E6%96%B0%E6%89%8B%E7%AF%87-%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E4%B8%8A%E8%86%9B%E6%9C%BA%E5%99%A8%E4%BA%BA/reply_hu6c3252242f1a9b7b61af37965102af7d_192120_1024x0_resize_box_2.png 1024w"
width="666"
height="428"
loading="lazy"
alt="reply to your reply">
&lt;/a>
&lt;figcaption>reply to your reply&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h2 id="结束">结束&lt;/h2>
&lt;p>以简单的案例来介绍 Telegram 机器人的玩法，希望能够帮助到入门的萌新打造属于自己的机器人。（撒花 ~=o(&lt;em>^▽^&lt;/em>)o~♪&lt;/p></description></item><item><title>Teleport 小记</title><link>https://axionl.me/p/teleport-%E5%B0%8F%E8%AE%B0/</link><pubDate>Sun, 06 Dec 2020 23:04:45 +0800</pubDate><guid>https://axionl.me/p/teleport-%E5%B0%8F%E8%AE%B0/</guid><description>&lt;img src="https://axionl.me/p/teleport-%E5%B0%8F%E8%AE%B0/banner.jpg" alt="Featured image of post Teleport 小记" />&lt;h2 id="简介">简介&lt;/h2>
&lt;p>常用于跨平台集群管理，提供多设备认证、远程操作和反向代理。&lt;/p>
&lt;blockquote>
&lt;p>项目地址：&lt;a class="link" href="https://github.com/gravitational/teleport" target="_blank" rel="noopener"
>github.com/gravitational/teleport&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>官方网站：&lt;a class="link" href="https://goteleport.com/teleport" target="_blank" rel="noopener"
>goteleport.com&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="安装">安装&lt;/h2>
&lt;p>有以下几种方式，单个可执行文件内已经包含 web 管理平台、服务端和客户端功能。(&lt;em>Windows 目前仅支持客户端&lt;/em>)&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://gravitational.com/teleport/download/" target="_blank" rel="noopener"
>可执行文件下载&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://quay.io/repository/gravitational/teleport?tab=tags" target="_blank" rel="noopener"
>Docker 下载&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://goteleport.com/teleport/installing" target="_blank" rel="noopener"
>编译安装&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="快速配置">快速配置&lt;/h2>
&lt;h3 id="服务端及-web-管理平台">服务端及 Web 管理平台&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">teleport&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">data_dir&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/var/lib/teleport&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 数据存放目录&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">auth_service&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">enabled&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">cluster_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;demo_cluster&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">listen_addr&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0.0.0.0&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="m">3025&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 认证监听地址&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">tokens&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">proxy,node,app:&amp;lt;nodes_auth_token&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 节点认证密令&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">ssh_service&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">enabled&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">env&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">staging&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">app_service&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">enabled&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">debug_app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">proxy_service&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">enabled&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">listen_addr&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0.0.0.0&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="m">3023&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 反向代理监听地址&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">web_listen_addr&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0.0.0.0&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="m">3080&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># web 管理页面地址&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">tunnel_listen_addr&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0.0.0.0&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="m">3024&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 隧道监听地址&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">public_addr&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">&amp;lt;https://example.domain.org:3025&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 反向代理公共地址&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">https_keypairs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 本地测试时可不设置证书&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">key_file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">&amp;lt;key_file_path&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">cert_file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">&amp;lt;cert_file_path&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>可由如下命令启用服务端进行测试，要点如下:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>在本地测试时即便没有填写 &lt;code>https_keypairs&lt;/code> 也仍然需要在监听的 &lt;code>web&lt;/code> 地址前面加上 &lt;code>https://&lt;/code>，或者使用 &lt;code>--insecure-no-tls&lt;/code> 命令行参数对 &lt;code>http://&lt;/code> 进行访问。&lt;/li>
&lt;li>如果配置中含有非对应权限目录或者证书文件，则调整到对应权限，如 &lt;code>/var/lib/teleport&lt;/code> 仅限 &lt;code>root&lt;/code> 权限访问，则需要调整到对应的权限再启动命令。&lt;/li>
&lt;li>所有的登陆行文均在 &lt;code>web_listen_addr&lt;/code> 所指示的地址发生。&lt;/li>
&lt;li>注意证书所对应的域名与可访问的相同&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ teleport start --config teleport.yaml
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>tctl&lt;/code> 是 &lt;code>teleport&lt;/code> 的一个命令行管理工具，在 &lt;code>teleport&lt;/code> 服务运行时，可以由它对用户、节点、密令等进行动态管理。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># 创建一个初始用户&lt;/span>
$ tctl users add &amp;lt;username&amp;gt; &amp;lt;login_user, login_group&amp;gt; --config teleport.yaml
&lt;/code>&lt;/pre>&lt;/div>&lt;p>添加好用户后可访问提示的地址，输入账户密码，用手机两步验证器扫码后填入验证码即可初始化成功。配置文件中支持除 &lt;code>otp&lt;/code> 外还支持 &lt;code>github auth&lt;/code> 认证等方式。&lt;/p>
&lt;p>&lt;figure style="flex-grow: 120; flex-basis: 289px">
&lt;a href="https://axionl.me/p/teleport-%E5%B0%8F%E8%AE%B0/invite.png" data-size="884x734">&lt;img src="https://axionl.me/p/teleport-%E5%B0%8F%E8%AE%B0/invite.png"
srcset="https://axionl.me/p/teleport-%E5%B0%8F%E8%AE%B0/invite_hu9c7b42c1b5dbea967607293c8d3ece26_53712_480x0_resize_box_2.png 480w, https://axionl.me/p/teleport-%E5%B0%8F%E8%AE%B0/invite_hu9c7b42c1b5dbea967607293c8d3ece26_53712_1024x0_resize_box_2.png 1024w"
width="884"
height="734"
loading="lazy"
alt="注册界面">
&lt;/a>
&lt;figcaption>注册界面&lt;/figcaption>
&lt;/figure> &lt;figure style="flex-grow: 99; flex-basis: 238px">
&lt;a href="https://axionl.me/p/teleport-%E5%B0%8F%E8%AE%B0/login.png" data-size="700x705">&lt;img src="https://axionl.me/p/teleport-%E5%B0%8F%E8%AE%B0/login.png"
srcset="https://axionl.me/p/teleport-%E5%B0%8F%E8%AE%B0/login_hu758d252b3ca4432e4cc31b1647d0f276_29819_480x0_resize_box_2.png 480w, https://axionl.me/p/teleport-%E5%B0%8F%E8%AE%B0/login_hu758d252b3ca4432e4cc31b1647d0f276_29819_1024x0_resize_box_2.png 1024w"
width="700"
height="705"
loading="lazy"
alt="登陆界面">
&lt;/a>
&lt;figcaption>登陆界面&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;blockquote>
&lt;p>常用的两步验客户端&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://authy.com/download/" target="_blank" rel="noopener"
>Authy&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.google.com/landing/2step/" target="_blank" rel="noopener"
>Google Authenticator&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.microsoft.com/en-us/account/authenticator" target="_blank" rel="noopener"
>Microsoft Authenticator&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h3 id="子节点">子节点&lt;/h3>
&lt;p>除了服务端平台自己可以作为节点外，还可以添加其他的子节点构成集群，大体上分为两类：&lt;/p>
&lt;ul>
&lt;li>子节点有公网可以访问&lt;/li>
&lt;li>非公网节点需要反向代理(&lt;code>roles&lt;/code> 内需要含有 &lt;code>proxy&lt;/code>)。&lt;/li>
&lt;/ul>
&lt;h4 id="静态子节点">静态子节点&lt;/h4>
&lt;p>静态子节点配置文件需要对应服务端里的地址和 &lt;code>&amp;lt;nodes_auth_token&amp;gt;&lt;/code>，随后直接在节点上运行即可。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">teleport&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">nodename&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;my_laptop&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">data_dir&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/var/lib/teleport/&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">auth_token&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">&amp;lt;nodes_auth_token&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">auth_servers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">&amp;lt;https://example.domain.org:3025&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 认证地址&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">proxy_service&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">enabled&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 本地子节点暂时无需启动反向代理服务端&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">ssh_service&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">enabled&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">env&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">local_node&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">auth_service&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">enabled&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 本地子节点暂时无需启动认证服务端&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="动态子节点">动态子节点&lt;/h4>
&lt;p>动态子节点需要在服务端上进行添加，由以下命令生成一个临时的 &lt;code>token&lt;/code> 以添加子节点。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ tctl nodes add --roles&lt;span class="o">=&lt;/span>node,proxy --ttl&lt;span class="o">=&lt;/span>5m --config teleport.yaml
&lt;/code>&lt;/pre>&lt;/div>&lt;p>得到形如下方的命令：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ teleport start &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --roles&lt;span class="o">=&lt;/span>node,proxy &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --token&lt;span class="o">=&lt;/span>&amp;lt;random_token&amp;gt; &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --auth-server&lt;span class="o">=&lt;/span>&amp;lt;https://example.domain.org:3025&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>添加成功后可以在 &lt;code>web&lt;/code> 界面内看到所有的节点。
&lt;figure style="flex-grow: 454; flex-basis: 1089px">
&lt;a href="https://axionl.me/p/teleport-%E5%B0%8F%E8%AE%B0/cluster.png" data-size="822x181">&lt;img src="https://axionl.me/p/teleport-%E5%B0%8F%E8%AE%B0/cluster.png"
srcset="https://axionl.me/p/teleport-%E5%B0%8F%E8%AE%B0/cluster_hu985d9a3ce60a2302a9eeab16abdb0ca9_12685_480x0_resize_box_2.png 480w, https://axionl.me/p/teleport-%E5%B0%8F%E8%AE%B0/cluster_hu985d9a3ce60a2302a9eeab16abdb0ca9_12685_1024x0_resize_box_2.png 1024w"
width="822"
height="181"
loading="lazy"
alt="Server Page">
&lt;/a>
&lt;figcaption>Server Page&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h3 id="客户端">客户端&lt;/h3>
&lt;p>安装包内自带一个名为 &lt;code>tsh&lt;/code> 的可执行文件，用于命令行认证和登陆&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ tsh login --proxy&lt;span class="o">=&lt;/span>&amp;lt;https://example.domain.org:3025&amp;gt; --user&lt;span class="o">=&lt;/span>&amp;lt;username&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>登陆后可以使用 &lt;code>ls&lt;/code> 命令查看已添加的节点&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ tsh ls
Node Name Address Labels
-------------- -------------- ----------------
demo_cluster 127.0.0.1:3022 &lt;span class="nv">env&lt;/span>&lt;span class="o">=&lt;/span>core_service
my_laptop ⟵ Tunnel &lt;span class="nv">env&lt;/span>&lt;span class="o">=&lt;/span>local_node
&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用 &lt;code>ssh&lt;/code> 来登陆节点终端&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ tsh ssh &amp;lt;node_name&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="高级配置">高级配置&lt;/h2>
&lt;h3 id="配合-k8s-管理服务">配合 K8S 管理服务&lt;/h3>
&lt;p>TBC&amp;hellip;&lt;/p>
&lt;hr>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://wallhaven.cc/w/ymz1qx" target="_blank" rel="noopener"
>Banner Artwork&lt;/a>&lt;/p>
&lt;/blockquote></description></item></channel></rss>