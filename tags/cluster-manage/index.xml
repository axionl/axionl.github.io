<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cluster Manage on 初等記憶體</title><link>https://axionl.me/tags/cluster-manage/</link><description>Recent content in Cluster Manage on 初等記憶體</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 06 Dec 2020 23:04:45 +0800</lastBuildDate><atom:link href="https://axionl.me/tags/cluster-manage/index.xml" rel="self" type="application/rss+xml"/><item><title>Teleport 小记</title><link>https://axionl.me/p/teleport-%E5%B0%8F%E8%AE%B0/</link><pubDate>Sun, 06 Dec 2020 23:04:45 +0800</pubDate><guid>https://axionl.me/p/teleport-%E5%B0%8F%E8%AE%B0/</guid><description>简介 常用于跨平台集群管理，提供多设备认证、远程操作和反向代理。
项目地址：github.com/gravitational/teleport
官方网站：goteleport.com
安装 有以下几种方式，单个可执行文件内已经包含 web 管理平台、服务端和客户端功能。(Windows 目前仅支持客户端)
可执行文件下载 Docker 下载 编译安装 快速配置 服务端及 Web 管理平台 teleport:data_dir:/var/lib/teleport# 数据存放目录auth_service:enabled:truecluster_name:&amp;#34;demo_cluster&amp;#34;listen_addr:0.0.0.0:3025# 认证监听地址tokens:- proxy,node,app:&amp;lt;nodes_auth_token&amp;gt;# 节点认证密令ssh_service:enabled:truelabels:env:stagingapp_service:enabled:truedebug_app:falseproxy_service:enabled:truelisten_addr:0.0.0.0:3023# 反向代理监听地址web_listen_addr:0.0.0.0:3080# web 管理页面地址tunnel_listen_addr:0.0.0.0:3024# 隧道监听地址public_addr:&amp;lt;https://example.domain.org:3025&amp;gt;# 反向代理公共地址https_keypairs:# 本地测试时可不设置证书- key_file:&amp;lt;key_file_path&amp;gt;- cert_file:&amp;lt;cert_file_path&amp;gt;可由如下命令启用服务端进行测试，要点如下:
在本地测试时即便没有填写 https_keypairs 也仍然需要在监听的 web 地址前面加上 https://，或者使用 --insecure-no-tls 命令行参数对 http:// 进行访问。 如果配置中含有非对应权限目录或者证书文件，则调整到对应权限，如 /var/lib/teleport 仅限 root 权限访问，则需要调整到对应的权限再启动命令。 所有的登陆行文均在 web_listen_addr 所指示的地址发生。 注意证书所对应的域名与可访问的相同 $ teleport start --config teleport.yaml tctl 是 teleport 的一个命令行管理工具，在 teleport 服务运行时，可以由它对用户、节点、密令等进行动态管理。
# 创建一个初始用户 $ tctl users add &amp;lt;username&amp;gt; &amp;lt;login_user, login_group&amp;gt; --config teleport.</description></item></channel></rss>